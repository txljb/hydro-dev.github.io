<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://hydro.js.org/rss.xml" rel="self" type="application/rss+xml"/>
    <title>Hydro</title>
    <link>https://hydro.js.org/</link>
    <description></description>
    <language>en-US</language>
    <pubDate>Sat, 23 Apr 2022 04:51:09 GMT</pubDate>
    <lastBuildDate>Sat, 23 Apr 2022 04:51:09 GMT</lastBuildDate>
    <generator>@mr-hope/vuepress-plugin-feed</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <item>
      <title>常见问题集合</title>
      <link>https://hydro.js.org/FAQ/</link>
      <guid>https://hydro.js.org/FAQ/</guid>
      <source url="https://hydro.js.org/rss.xml">常见问题集合</source>
      <pubDate>Mon, 14 Mar 2022 10:46:41 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="常见问题集合"> 常见问题集合</h1>
<h2 id="好消息-本页和各大浏览器均达成了合作-使用-ctrl-f-即可快速搜索关键词"> 好消息！本页和各大浏览器均达成了合作，使用 Ctrl-F 即可快速搜索关键词！</h2>

<h2 id="用户qq群-1085853538"> 用户QQ群 1085853538</h2>
<h2 id="如何快速上手了解系统功能"> 如何快速上手了解系统功能？</h2>
<p>到 <a href="https://hydro.ac" target="_blank" rel="noopener noreferrer">https://hydro.ac</a> 注册一个账号，登陆后右上角点击 我的域 -&gt; 创建域<br>
创建后进入自己的域，即可无服务器快速体验系统功能。<br>
如果你没有二开很多功能的需求，推荐直接使用在线服务。超过两万题的题库可以直接复制使用，无需购置云服务器，无需手动维护，更省心。<br>
如果你有需要绑定自己的域名或是改 Logo 等等，加群联系群主。</p>
<p>系统中的用户只有编辑、禁用功能，没有删除功能，这是为了从根源上防止出现“教学事故”，请不要要求增加相关功能，如果认为自己绝不会误操作，请自行开发相关功能。</p>
<h2 id="什么是-oj"> 什么是 OJ？</h2>
<p>现在你所使用的评测系统也仅仅是一个程序，并没有人工智能。因此很多地方需要你来迁就它，如果不这样做，你的答案即使本质上是正确的，由于形式的错误造成系统不能理解，也会导致错误。<br>
系统运行过程如下：</p>
<ul>
<li>教师在系统中添加题目，并严格定义题目提供输入数据的格式和要求的输出数据格式。</li>
<li>教师根据题目定义的格式向系统中添加若干组测试数据，每组数据都包含输入数据和对应的输出。</li>
<li>学生阅读题目，并根据自己的理解提交程序。</li>
<li>系统编译并运行学生的程序，再将老师事先提供的输入数据“喂”给学生的程序，看它会输出什么。</li>
<li>如果学生程序的输出与老师之前提供的输出完全一致，一字不差，则认为学生的程序是正确的，否则则认为该程序错误。</li>
<li>如果运行过程中出现内存、时间上超出题目限制的情况，则中断程序的运行，并认为答案不正确。</li>
</ul>
<p>在了解了上面的情况以后，同学们应该理解，如果题目没有要求程序输出“Please Input Two Number”之类的提示信息，那么自行输出这些文字将导致你的程序输出与老师事先告诉系统的输出不能做到“一字不差”，因而将导致系统报答案错误。<br>
如果题目要求每两行输出之间要空一行，结果你没有空，会是格式错误，反之亦然。<br>
也许你会觉得，哦，这系统太烂了，这点东西都不能自动识别；实际上正是这样才能有效训练大家编程的精确性、养成良好的代码习惯。很多程序高手都跟你一样，是从对这个系统吐槽开始学习如何认真仔细的、一丝不苟的进行编程的。<br>
系统为了能用统一的方式运行所有同学的答案，不得不对所有人提交的答案的形式进行限定。<br>
对于学习C、C++语言的同学来说，所有提交给系统的答案必须包含并且只有一个main函数，这个main函数必须返回int类型，并且最好返回0，因为操作系统对非零的返回值认为是运行出错。<br>
编译错误发生时，点击“编译错误”的文字链接可以得到详细解释。</p>
<h2 id="arch-linux-开发模式安装时出现-err-stream-premature-close-premature-close-错误"> Arch Linux 开发模式安装时出现 [ERR_STREAM_PREMATURE_CLOSE]: Premature close 错误</h2>
<p>删除 <code>.yarnrc.yml</code> 和 <code>.yarn</code> 后再试。</p>
<h2 id="为什么我安装完成之后仍然无法访问"> 为什么我安装完成之后仍然无法访问？</h2>
<p>如果您使用的是 阿里云/腾讯云 等服务商，请确保安全组放行了 8888 端口。</p>
<h2 id="为什么我配置完反向代理-caddy-nginx-之后无法登录-出现csrftokenerror"> 为什么我配置完反向代理(caddy/nginx)之后无法登录(出现CsrfTokenError)？</h2>
<p>反向代理时请确保设置了正确的 Host Header。<a href="/docs/install/proxy.html">详细说明</a></p>
<h2 id="怎么备份-还原备份-迁移数据"> 怎么备份/还原备份/迁移数据？</h2>
<p><code>hydrooj backup</code> <code>hydrooj restore backup-xxx.zip</code></p>
<p>百度学习 crontab 的用法后，可以使用 <code>sudo crontab -e</code> 定制自动备份计划。</p>
<h2 id="恢复备份时出现-data-file-hydro-directory-not-empty"> 恢复备份时出现 '/data/file/hydro': Directory not empty</h2>
<p>关闭 <code>minio</code> (<code>pm2 stop minio</code>) 后手动删除 <code>/data/file/hydro</code> 文件夹再重试。</p>
<h2 id="更新升级"> 更新升级</h2>
<p><code>yarn global upgrade-interactive --latest</code> 然后按空格选中除 pm2 之外的所有包更新，回车确认。
然后 <code>pm2 restart hydrooj</code> 重启服务。
重启后 <code>pm2 logs hydrooj --lines 100</code> 没有看到报错并看到了 <code>Server started</code> 则一切正常。</p>
<p>Hydro 的所有历史版本，都可以无损升级到最新版本。如果老系统更新有疑问，随时加官方群咨询群主。</p>
<h2 id="怎么导入题目-创建题目"> 怎么导入题目/创建题目？</h2>
<p>题目列表右侧有相应入口。</p>
<p>切记：不要导入过多你暂时用不上的题目，正确的方式是每次训练、作业，导入所需的5-10个题目，比赛作业结束后让题目成为训练题库的一部分。这样能保证题库中题号靠前的题目难度依次上升，适合后来的同学自行训练。不要贪图题目数量而忽视其质量。自己看不懂解法的题目，少用、慎用。</p>
<h2 id="如何限制未登录用户访问"> 如何限制未登录用户访问？</h2>
<p>管理域 -&gt; 管理权限 将 Guest 权限组的 查看此域 权限禁用。</p>
<h2 id="比赛作业里面的时间是什么含义-oi排名跟普通排名有何区别"> 比赛作业里面的时间是什么含义，OI排名跟普通排名有何区别？</h2>
<p>时间是指参与人员做出对应题目“花费”的时间：<br>
即：做出题目的时刻 – 比赛开始的时刻 + 惩罚时间<br>
惩罚时间 = 做对之前错误的提交数 * 20分钟。<br>
普通排名按做对的题目数和“花费”的时间进行排名。<br>
OI排名，按得分排名，题目可以按通过的比例进行记分，每题100分。如果希望数据的分值不平均分配，可以使用 config 配置。</p>
<h2 id="脚本把-oj-装在哪里了"> 脚本把 OJ 装在哪里了？</h2>
<p>Hydro 的默认位置可以运行 <code>yarn global dir</code> 得到。（不要直接改代码，更新会覆盖此处的所有修改，请使用插件API）<br>
默认的数据库文件放置在 <code>/data/db</code>，但是不要直接复制文件，而是推荐用 <code>hydrooj backup</code> 进行备份。<br>
测试数据等文件存储于 <code>/data/file</code>。<br>
配置文件位于 <code>/root/.config/hydro</code> 和 <code>/root/.hydro</code>。
对于正在运行中的生产服务器，任何操作前请做好离线备份。<br>
备份文件一定要解压查看内部是否包含全部数据，关注备份的大小（大系统备份应该有上百兆），有条件找虚拟机实测还原是否成功</p>
<h2 id="题目的限时和内存限制的精度是怎样的"> 题目的限时和内存限制的精度是怎样的？</h2>
<p>题目限时允许设定的字面精度是 1ms,但是由于操作系统内核参数的限定，实测的精度通常为4ms。
内存限制的精度是1MB，对于本地native的编译型语言c/c++/pascal/freebasic/clang等是考察程序本身的内存申请空间; 对于虚拟机和脚本语言，则包含了虚拟机本身或解释器本身的内存消耗。</p>
<h2 id="我想让-python-支持-numpy-等等库-怎么办"> 我想让 Python 支持 numpy 等等库，怎么办？</h2>
<p><code>pip3 install numpy</code> 后 <code>pm2 restart hydro-sandbox</code></p>
<h2 id="使用安装脚本后忘记-mongodb-的账号密码怎么办"> 使用安装脚本后忘记 MongoDB 的账号密码怎么办？</h2>
<p>看 <code>/root/.hydro/config.json</code> 。</p>
<h2 id="如何关闭、打开用户注册"> 如何关闭、打开用户注册？</h2>
<p>用户注册由 Guest 用户（uid 为 0）的 PRIV_REGISTER_USER 权限控制，默认允许注册。
使用 <code>hydrooj cli user setPriv 0 0</code> 即可关闭注册。
若要重新打开，可使用 <code>hydrooj cli user setPriv 0 8</code>。</p>
<p>变更后，请重启 hydrooj 服务：<code>pm2 restart hydrooj</code></p>
<h2 id="用户名为-hydro-的用户是干什么的-密码是什么-可以登录么"> 用户名为 Hydro 的用户是干什么的？密码是什么？可以登录么？</h2>
<p>用户名为 Hydro 的用户（uid 为 1）仅用于发送系统消息（与 QQ 中的 10000 类似），无法登录。</p>
<h2 id="如何修改网站图标"> 如何修改网站图标？</h2>
<p>使用 <code>hydrooj addon create</code> 创建一个插件，这会自动创建 <code>/root/addon</code> 目录。<br>
进入 <code>/root/addon/public</code> 目录，将您的站点图标放置于该文件夹下。<br>
您需要将以下文件放在该目录中（适配不同浏览器）：</p>
<ul>
<li><code>favicon-16x16.png</code></li>
<li><code>favicon-32x32.png</code></li>
<li><code>favicon-96x96.png</code></li>
<li><code>favicon.ico</code> (32x32)</li>
<li><code>android-chrome-192x192.png</code></li>
<li><code>apple-touch-icon-180x180.png</code></li>
</ul>
<p>分辨率应尽可能对应，但不强制要求。以上图片将在浏览器标签页图片上显示。<br>
您还需要将以下文件放在该目录：</p>
<ul>
<li><code>nav_logo_dark.png</code></li>
<li><code>nav_logo_dark_2x.png</code></li>
</ul>
<p>以上图片将在页面左上角 logo 显示。
之后前往系统设置，找到 <code>nav_logo_dark</code> 和 <code>nav_logo_dark_2x</code> 设置项，分别改为 <code>/nav_logo_dark.png</code> 和 <code>/nav_logo_dark_2x.png</code> ，重启 Hydro 即可应用更改。</p>
<h2 id="如何重置数据"> 如何重置数据？</h2>
<div><p>Note</p>
<p>此操作会删除所有用户/题目/比赛等数据。请谨慎操作！</p>
</div>
<p>将 <a href="https://github.com/hydro-dev/Hydro/blob/master/install/reset.sh" target="_blank" rel="noopener noreferrer">此脚本</a> 下载到服务器运行。</p>
<p>您可按需更改，显示顺序与配置中的排列顺序相同。</p>
<h2 id="评测显示-总时限超过-60s-评测取消"> 评测显示“总时限超过 60s，评测取消”</h2>
<p>在系统设置中修改 total_time_limit 为允许的单题最大评测时长即可。</p>
<h2 id="如何在背景中添加线条特效"> 如何在背景中添加线条特效？</h2>
<p>在系统设置中找到 <code>footer_extra_html</code> 项，加上如下内容：（写在一行内，不要多加换行）</p>
<blockquote>
<p>基于 https://github.com/hustcc/canvas-nest.js ，MIT</p>
</blockquote>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>html</div><div class='code-container'><code><div class='line'><span style="color: #81A1C1">&lt;script&gt;</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">()</span><span style="color: #81A1C1">=&gt;</span><span style="color: #ECEFF4">{</span><span style="color: #81A1C1">function</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">e</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">n</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">){</span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">getAttribute</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">n</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">||</span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">}</span><span style="color: #81A1C1">function</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">n</span><span style="color: #ECEFF4">(){</span><span style="color: #D8DEE9">l</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">i</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">width</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">window</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">innerWidth</span><span style="color: #81A1C1">||</span><span style="color: #D8DEE9">document</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">documentElement</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">clientWidth</span><span style="color: #81A1C1">||</span><span style="color: #D8DEE9">document</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">body</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">clientWidth</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">u</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">i</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">height</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">window</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">innerHeight</span><span style="color: #81A1C1">||</span><span style="color: #D8DEE9">document</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">documentElement</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">clientHeight</span><span style="color: #81A1C1">||</span><span style="color: #D8DEE9">document</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">body</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">clientHeight</span><span style="color: #ECEFF4">}</span><span style="color: #81A1C1">function</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">c</span><span style="color: #ECEFF4">(){</span><span style="color: #81A1C1">var</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">o</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">i</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">a</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">m</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9">r</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">clearRect</span><span style="color: #D8DEE9FF">(</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">l</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">u</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">s</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">forEach</span><span style="color: #D8DEE9FF">(</span><span style="color: #81A1C1">function</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">n</span><span style="color: #ECEFF4">){</span><span style="color: #81A1C1">for</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">+=</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">xa</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">y</span><span style="color: #81A1C1">+=</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">ya</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">xa</span><span style="color: #81A1C1">*=</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9">l</span><span style="color: #81A1C1">||</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">&lt;</span><span style="color: #B48EAD">0</span><span style="color: #81A1C1">?-</span><span style="color: #B48EAD">1</span><span style="color: #81A1C1">:</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">ya</span><span style="color: #81A1C1">*=</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">y</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9">u</span><span style="color: #81A1C1">||</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">y</span><span style="color: #81A1C1">&lt;</span><span style="color: #B48EAD">0</span><span style="color: #81A1C1">?-</span><span style="color: #B48EAD">1</span><span style="color: #81A1C1">:</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">r</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">fillRect</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">-</span><span style="color: #B48EAD">.5</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">y</span><span style="color: #81A1C1">-</span><span style="color: #B48EAD">.5</span><span style="color: #ECEFF4">,</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">o</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">n</span><span style="color: #81A1C1">+</span><span style="color: #B48EAD">1</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9">o</span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9">d</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">length</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9">o</span><span style="color: #81A1C1">++</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">null!==</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">t</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">d</span><span style="color: #D8DEE9FF">[</span><span style="color: #D8DEE9">o</span><span style="color: #D8DEE9FF">])</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">&&null!==</span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">y</span><span style="color: #81A1C1">&&</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">i</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">-</span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">a</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">y</span><span style="color: #81A1C1">-</span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">y</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">m</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">i</span><span style="color: #81A1C1">*</span><span style="color: #D8DEE9">i</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9">a</span><span style="color: #81A1C1">*</span><span style="color: #D8DEE9">a</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">max</span><span style="color: #81A1C1">&&</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">t</span><span style="color: #81A1C1">===</span><span style="color: #D8DEE9">y</span><span style="color: #81A1C1">&&</span><span style="color: #D8DEE9">m</span><span style="color: #81A1C1">&gt;=</span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">max</span><span style="color: #81A1C1">/</span><span style="color: #B48EAD">2</span><span style="color: #81A1C1">&&</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">-=</span><span style="color: #B48EAD">.03</span><span style="color: #81A1C1">*</span><span style="color: #D8DEE9">i</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">y</span><span style="color: #81A1C1">-=</span><span style="color: #B48EAD">.03</span><span style="color: #81A1C1">*</span><span style="color: #D8DEE9">a</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">m</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">max</span><span style="color: #81A1C1">-</span><span style="color: #D8DEE9">m</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">/</span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">max</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">r</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">beginPath</span><span style="color: #D8DEE9FF">()</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">r</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">lineWidth</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">m</span><span style="color: #81A1C1">/</span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">r</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">strokeStyle</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">rgba(</span><span style="color: #ECEFF4">"</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">c</span><span style="color: #81A1C1">+</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">,</span><span style="color: #ECEFF4">"</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9FF">(</span><span style="color: #B48EAD">.2</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9">m</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">+</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">)</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">r</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">moveTo</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">y</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">r</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">lineTo</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">y</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">r</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">stroke</span><span style="color: #D8DEE9FF">()))</span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">,</span><span style="color: #88C0D0">w</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">c</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">}</span><span style="color: #81A1C1">var</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">l</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">u</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">d</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">o</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">i</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">document</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">createElement</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">canvas</span><span style="color: #ECEFF4">"</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">t</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">o</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">document</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">getElementsByTagName</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">script</span><span style="color: #ECEFF4">"</span><span style="color: #D8DEE9FF">))</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9FF">length</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">o</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">o</span><span style="color: #D8DEE9FF">[</span><span style="color: #D8DEE9">t</span><span style="color: #81A1C1">-</span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF">]</span><span style="color: #ECEFF4">,{</span><span style="color: #88C0D0">l</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9">t</span><span style="color: #ECEFF4">,</span><span style="color: #88C0D0">z</span><span style="color: #ECEFF4">:</span><span style="color: #88C0D0">e</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">o</span><span style="color: #ECEFF4">,</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">zIndex</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span><span style="color: #81A1C1">-</span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">,</span><span style="color: #88C0D0">o</span><span style="color: #ECEFF4">:</span><span style="color: #88C0D0">e</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">o</span><span style="color: #ECEFF4">,</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">opacity</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span><span style="color: #B48EAD">.5</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">,</span><span style="color: #88C0D0">c</span><span style="color: #ECEFF4">:</span><span style="color: #88C0D0">e</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">o</span><span style="color: #ECEFF4">,</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">color</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">0,0,0</span><span style="color: #ECEFF4">"</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">,</span><span style="color: #88C0D0">n</span><span style="color: #ECEFF4">:</span><span style="color: #88C0D0">e</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">o</span><span style="color: #ECEFF4">,</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">count</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span><span style="color: #B48EAD">99</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">a</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">c_n</span><span style="color: #ECEFF4">"</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">l</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">r</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">i</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">getContext</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">2d</span><span style="color: #ECEFF4">"</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">w</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">window</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">requestAnimationFrame</span><span style="color: #81A1C1">||</span><span style="color: #D8DEE9">window</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">webkitRequestAnimationFrame</span><span style="color: #81A1C1">||</span><span style="color: #D8DEE9">window</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">mozRequestAnimationFrame</span><span style="color: #81A1C1">||</span><span style="color: #D8DEE9">window</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">oRequestAnimationFrame</span><span style="color: #81A1C1">||</span><span style="color: #D8DEE9">window</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">msRequestAnimationFrame</span><span style="color: #81A1C1">||function</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">){</span><span style="color: #D8DEE9">window</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">setTimeout</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">,</span><span style="color: #B48EAD">1e3</span><span style="color: #81A1C1">/</span><span style="color: #B48EAD">45</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">},</span><span style="color: #D8DEE9">m</span><span style="color: #81A1C1">=Math</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">random</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">y</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">{</span><span style="color: #88C0D0">x</span><span style="color: #ECEFF4">:</span><span style="color: #81A1C1">null</span><span style="color: #ECEFF4">,</span><span style="color: #88C0D0">y</span><span style="color: #ECEFF4">:</span><span style="color: #81A1C1">null</span><span style="color: #ECEFF4">,</span><span style="color: #88C0D0">max</span><span style="color: #ECEFF4">:</span><span style="color: #B48EAD">2e4</span><span style="color: #ECEFF4">}</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9">i</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">id</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">a</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">i</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">style</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">cssText</span><span style="color: #81A1C1">=</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">position:fixed;top:0;left:0;z-index:</span><span style="color: #ECEFF4">"</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">z</span><span style="color: #81A1C1">+</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">;opacity:</span><span style="color: #ECEFF4">"</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">o</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">document</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">getElementsByClassName</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">main</span><span style="color: #ECEFF4">"</span><span style="color: #D8DEE9FF">)[</span><span style="color: #B48EAD">0</span><span style="color: #D8DEE9FF">]</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">appendChild</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">i</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">,</span><span style="color: #88C0D0">n</span><span style="color: #D8DEE9FF">()</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">window</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">onresize</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">n</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">window</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">onmousemove</span><span style="color: #81A1C1">=function</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">){</span><span style="color: #D8DEE9">e</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">e</span><span style="color: #81A1C1">||</span><span style="color: #D8DEE9">window</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">event</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">y</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">clientX</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">y</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">y</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">e</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">clientY</span><span style="color: #ECEFF4">},</span><span style="color: #D8DEE9">window</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">onmouseout</span><span style="color: #81A1C1">=function</span><span style="color: #ECEFF4">(){</span><span style="color: #D8DEE9">y</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">x</span><span style="color: #81A1C1">=null</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">y</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">y</span><span style="color: #81A1C1">=null</span><span style="color: #ECEFF4">}</span><span style="color: #81A1C1">;for</span><span style="color: #D8DEE9FF">(</span><span style="color: #81A1C1">var</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">s</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF">[]</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">h</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">0</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">n</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9">h</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9">h</span><span style="color: #81A1C1">++</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">{</span><span style="color: #81A1C1">var</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">f</span><span style="color: #81A1C1">=</span><span style="color: #88C0D0">m</span><span style="color: #D8DEE9FF">()</span><span style="color: #81A1C1">*</span><span style="color: #D8DEE9">l</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">g</span><span style="color: #81A1C1">=</span><span style="color: #88C0D0">m</span><span style="color: #D8DEE9FF">()</span><span style="color: #81A1C1">*</span><span style="color: #D8DEE9">u</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">p</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">2</span><span style="color: #81A1C1">*</span><span style="color: #88C0D0">m</span><span style="color: #D8DEE9FF">()</span><span style="color: #81A1C1">-</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9">v</span><span style="color: #81A1C1">=</span><span style="color: #B48EAD">2</span><span style="color: #81A1C1">*</span><span style="color: #88C0D0">m</span><span style="color: #D8DEE9FF">()</span><span style="color: #81A1C1">-</span><span style="color: #B48EAD">1</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9">s</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">push</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">{</span><span style="color: #88C0D0">x</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9">f</span><span style="color: #ECEFF4">,</span><span style="color: #88C0D0">y</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9">g</span><span style="color: #ECEFF4">,</span><span style="color: #88C0D0">xa</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9">p</span><span style="color: #ECEFF4">,</span><span style="color: #88C0D0">ya</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9">v</span><span style="color: #ECEFF4">,</span><span style="color: #88C0D0">max</span><span style="color: #ECEFF4">:</span><span style="color: #B48EAD">6e3</span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9">d</span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9">s</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">concat</span><span style="color: #D8DEE9FF">([</span><span style="color: #D8DEE9">y</span><span style="color: #D8DEE9FF">])</span><span style="color: #ECEFF4">,</span><span style="color: #88C0D0">setTimeout</span><span style="color: #D8DEE9FF">(</span><span style="color: #81A1C1">function</span><span style="color: #ECEFF4">(){</span><span style="color: #88C0D0">c</span><span style="color: #D8DEE9FF">()</span><span style="color: #ECEFF4">},</span><span style="color: #B48EAD">100</span><span style="color: #D8DEE9FF">)</span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)()</span><span style="color: #81A1C1">;&lt;/script&gt;</span></div></code></div></pre>
<div></div></div><h2 id="使用-hydro-要花多少钱"> 使用 Hydro 要花多少钱？</h2>
<p>不要钱，我们是 GPL 的。如果你钱多，可以 <a href="https://pay.undefined.moe" target="_blank" rel="noopener noreferrer">给我发个红包</a>。</p>
<h2 id="为何我的c-c-都能用-唯独java总是ce-re"> 为何我的C/C++都能用，唯独Java总是CE/RE？</h2>
<p>目前只支持sun原版jdk和openjdk，其他jdk暂不能保证支持。如果你用的是64位系统，你可能需要自己调整一下源代码。</p>
<h2 id="execve-no-such-file-or-directory"> execve: no such file or directory</h2>
<p>脚本安装默认只装了 cpp 和 pascal 编译器。请使用 apt 按需安装其他编译器。装完之后 <code>pm2 restart hydro-sandbox</code></p>
<h2 id="怎么自定义用户标签"> 怎么自定义用户标签？</h2>
<p>进入 MongoDB，执行下面的操作即可（根据具体情况替换尖括号中的部分）：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">use hydro</span></div><div class='line'><span style="color: #D8DEE9FF">db.user.update</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">{</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">_id</span><span style="color: #ECEFF4">"</span><span style="color: #D8DEE9FF">: </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">用户 UID</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">}, {</span><span style="color: #81A1C1">$</span><span style="color: #D8DEE9">set</span><span style="color: #D8DEE9FF">: {</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">badge</span><span style="color: #ECEFF4">"</span><span style="color: #D8DEE9FF">: </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">&lt;标签内容&gt;#&lt;背景颜色（HEX）&gt;#&lt;文字颜色（HEX）&gt;</span><span style="color: #ECEFF4">"</span><span style="color: #D8DEE9FF">}}</span><span style="color: #ECEFF4">)</span></div></code></div></pre>
<div></div></div><h2 id="为什么我无法批量下载多个文件"> 为什么我无法批量下载多个文件？</h2>
<p>批量下载多个文件需要满足以下两个条件之一：</p>
<ul>
<li>网站使用 https 进行通讯</li>
<li>用户能够正常访问 github.io</li>
</ul>
<p>否则请选择逐个下载文件（Ctrl+点击文件名）。</p>
<h2 id="the-yarn-global-commands-have-been-remove-in-2-x-consider-using-yarn-dlx-or-a-third-party-plugin-instead"> The 'yarn global' commands have been remove in 2.x - consider using 'yarn dlx' or a third-party plugin instead</h2>
<p>如果你搞不明白这个问题，请老实用安装脚本，不要折腾开发模式。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Home</title>
      <link>https://hydro.js.org/</link>
      <guid>https://hydro.js.org/</guid>
      <source url="https://hydro.js.org/rss.xml">Home</source>
      <pubDate>Wed, 22 Jul 2020 10:21:41 GMT</pubDate>
      <content:encoded><![CDATA[<p><img src="https://img.shields.io/github/license/hydro-dev/Hydro" alt="LICENSE" loading="lazy">
<img src="https://img.shields.io/github/workflow/status/hydro-dev/hydro/CI" alt="GitHub Workflow Status" loading="lazy">
<img src="https://img.shields.io/npm/dm/hydrooj" alt="hydrooj" loading="lazy">
<img src="https://img.shields.io/npm/v/hydrooj?label=hydrooj" alt="npm" loading="lazy">
<img src="https://img.shields.io/node/v/hydrooj" alt="node-current" loading="lazy">
<img src="https://img.shields.io/github/contributors/hydro-dev/Hydro" alt="GitHub contributors" loading="lazy">
<img src="https://img.shields.io/github/commit-activity/y/hydro-dev/Hydro" alt="GitHub commit activity" loading="lazy"></p>
<p>Hydro 是一个高效的信息学在线测评系统。特点：易于部署（且提供安装脚本），轻量，功能强大且易于扩展。</p>
<p><a href="https://github.com/hydro-dev/Hydro" target="_blank" rel="noopener noreferrer">Github 仓库</a></p>
<p>欢迎 star 本项目，这是对开发者的鼓励。<br>
项目的开发与维护需要资金，欢迎进行捐助。<br>
Hydro 提供收费的功能定制服务，如您需要可与我们联系。<br>
相关文档若说明的不够详细，请提交 Pull Request 或联系开发组说明。<br>
Bug 和功能建议请在 <a href="https://github.com/hydro-dev/Hydro/issues" target="_blank" rel="noopener noreferrer">Issues</a> 提出。</p>
<p><a href="https://gitpod.io/#https://github.com/hydro-dev/Hydro" target="_blank" rel="noopener noreferrer">在 Gitpod 打开已配置完成的测试环境</a></p>
<p><a href="https://hydro.ac/" target="_blank" rel="noopener noreferrer">Hydro Online Judge</a></p>
<h2 id="联系我们"> 联系我们</h2>
<p>QQ <a href="https://wpa.qq.com/msgrd?v=3&amp;uin=3402182471&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener noreferrer">3402182471</a><br>
Hydro 用户群：1085853538<br>
Telegram <a href="https://t.me/webpack_exports_undefined" target="_blank" rel="noopener noreferrer">@webpack_exports_undefined</a></p>
<h2 id="开源许可"> 开源许可</h2>
<p>本项目基于 AGPL v3 开源。<br>
在您部署 Hydro 时，需要保留底部的 <code>Powered by Hydro</code> 字样，其中的 <code>Hydro</code> 字样需指向 <code>hydro.js.org/本仓库/fork</code> 之一的链接。<br>
若您对源码做出修改，同样需要以 AGPL v3 开源，您可以以 <code>Powered by Hydro, Modified by xxx</code> 格式在页脚注明。<br>
此限制对以下模块仍然有效：</p>
<ul>
<li>Hydro 插件；</li>
<li>包括但不限于使用 http 协议与 Hydro 进行交互的组件；</li>
</ul>
<p>若您需要对这些模块闭源处理，请考虑联系我们以购买许可。<br>
鉴于 Mirai 处的 <a href="https://github.com/mamoe/mirai/issues/850" target="_blank" rel="noopener noreferrer">不和谐事件</a> 对此项目做如下声明：</p>
<ul>
<li>项目开源不代表开发者有义务为您提供服务。</li>
<li>在提问前请先阅读《提问的智慧》。</li>
<li>若有必要，开发者有权对您停止任何技术支持。</li>
<li>开发组会 <strong>尽可能</strong> 保证用户可以进行平滑升级，但无法保证不在新版本引入影响使用的漏洞，且内部实现可能会在不发布任何通知的情况下进行重命名/修改/删除。</li>
</ul>
<p>如果您对以上条目感到不适，建议您停止使用本项目。</p>
<h2 id="鸣谢"> 鸣谢</h2>
<p>排名不分先后，按照链接字典序。</p>
<ul>
<li><a href="https://github.com/" target="_blank" rel="noopener noreferrer">Github</a> 为 Hydro 提供了代码托管与自动构建。</li>
<li><a href="https://github.com/criyle" target="_blank" rel="noopener noreferrer">criyle</a> 提供评测沙箱实现。</li>
<li><a href="https://github.com/vijos/vj4" target="_blank" rel="noopener noreferrer">Vijos</a> 为 Hydro 提供了UI框架。</li>
</ul>
]]></content:encoded>
      <enclosure url="https://img.shields.io/github/license/hydro-dev/Hydro" type="image/"/>
    </item>
    <item>
      <title>权限节点</title>
      <link>https://hydro.js.org/dev/PERM_PRIV/</link>
      <guid>https://hydro.js.org/dev/PERM_PRIV/</guid>
      <source url="https://hydro.js.org/rss.xml">权限节点</source>
      <pubDate>Mon, 25 Jan 2021 18:27:09 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="权限节点"> 权限节点</h1>
<p>Hydro 的权限使用位运算处理。<br>
例：若某用户具有 <code>PRIV_EDIT_SYSTEM</code> 与 <code>PRIV_SET_PERM</code> 权限，应设置为 <code>(1&lt;&lt;0)|(1&lt;&lt;1)</code> （即 3）</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>js</div><div class='code-container'><code><div class='line'><span style="color: #81A1C1">export</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">PRIV</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_NONE</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_EDIT_SYSTEM</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// renamed from PRIV_SET_PRIV</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_SET_PERM</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_USER_PROFILE</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_REGISTER_USER</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">3</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_READ_PROBLEM_DATA</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">4</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_READ_PRETEST_DATA</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">5</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// deprecated</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_READ_PRETEST_DATA_SELF</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">6</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// deprecated</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_READ_RECORD_CODE</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">7</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_VIEW_HIDDEN_RECORD</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">8</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_JUDGE</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">9</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// (renamed)</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_CREATE_DOMAIN</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">10</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_VIEW_ALL_DOMAIN</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">11</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_MANAGE_ALL_DOMAIN</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">12</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_REJUDGE</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">13</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_VIEW_USER_SECRET</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">14</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_VIEW_JUDGE_STATISTICS</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">15</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_CREATE_FILE</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">16</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_UNLIMITED_QUOTA</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">17</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_DELETE_FILE</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">18</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_DELETE_FILE_SELF</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">19</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_ALL</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">-</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span></div><div class='line'></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">PRIV_DEFAULT</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #ECEFF4">}</span><span style="color: #81A1C1">;</span></div></code></div></pre>
<div></div></div><p>可以看 <a href="https://github.com/hydro-dev/Hydro/blob/aa096322c3676e5e858e3a5021313a3d3afdf794/packages/hydrooj/src/model/builtin.ts#L216" target="_blank" rel="noopener noreferrer">代码</a> 中关于此部分的内容。</p>
]]></content:encoded>
    </item>
    <item>
      <title>开发环境部署</title>
      <link>https://hydro.js.org/dev/</link>
      <guid>https://hydro.js.org/dev/</guid>
      <source url="https://hydro.js.org/rss.xml">开发环境部署</source>
      <pubDate>Mon, 25 Jan 2021 18:27:09 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="开发环境部署"> 开发环境部署</h1>
<p>如果您没有过 TypeScript 项目的开发经验，我们不建议您使用此方式。<br>
使用自动脚本安装也可以基于插件系统完成大部分简单的定制需求。</p>
<p>您可以使用 <a href="https://gitpod.io/#https://github.com/hydro-dev/Hydro" target="_blank" rel="noopener noreferrer">Gitpod</a> 快速打开配置完成的开发环境或是按照下方说明进行手动配置。（由于 Gitpod 的限制，hydrojudge 模块无法正常运行，若需要开发 hydrojudge 相关内容请自行部署）</p>
<h2 id="安装依赖"> 安装依赖</h2>
<ul>
<li>MongoDB：Hydro 需要 <a href="https://www.mongodb.com/try/download/community" target="_blank" rel="noopener noreferrer">MongoDB</a> 提供数据库服务。</li>
<li>S3：可使用 <a href="https://min.io" target="_blank" rel="noopener noreferrer">MinIO</a> 提供 S3 服务。</li>
<li>NodeJS：请安装 NodeJS &gt;=14 版本。（若使用 apt 请使用 nodesource 提供的源替代官方源） （推荐使用 <a href="https://nvm.sh/" target="_blank" rel="noopener noreferrer">nvm</a>）</li>
<li>yarn：安装 yarn 前请先完成 NodeJS 安装。 <code>npm install -g yarn</code></li>
</ul>
<p>尽管这不是必须的，但文档多数区域使用了 <code>npx</code> 工具来调用工作区的程序。你可以在 <strong>Hydro 项目文件夹外</strong>使用 <code>yarn global add npx</code> 安装它。</p>
<div><p>Tips</p>
<p>腾讯COS、Amazon S3、wasabi 等也可提供 S3 服务。  详见<a href="/docs/install/s3">此处</a></p>
</div>
<h2 id="安装-hydro"> 安装 Hydro</h2>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">git clone https://github.com/hydro-dev/Hydro.git /root/Hydro --recursive </span><span style="color: #616E88"># 下载至 /root/Hydro 文件夹</span></div><div class='line'><span style="color: #88C0D0">cd</span><span style="color: #D8DEE9FF"> /root/Hydro </span><span style="color: #616E88"># 进入工作目录</span></div><div class='line'><span style="color: #D8DEE9FF">yarn </span><span style="color: #616E88"># 安装依赖包</span></div><div class='line'><span style="color: #D8DEE9FF">yarn build:ui:production </span><span style="color: #616E88"># 编译前端</span></div></code></div></pre>
<div></div></div><h2 id="插件"> 插件</h2>
<p>开发环境部署完成后默认不启用任何插件。</p>
<p>所有官方插件均随源码仓库下载到安装文件夹的 <code>packages</code> 子文件夹下，可以通过下面的命令启用官方插件（以启用 <code>@hydrooj/ui-default</code> 为例）：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">npx hydrooj addon add @hydrooj/ui-default</span></div></code></div></pre>
<div></div></div><p>对于非官方插件，下载后通过下面的命令启用即可（以启用位置在 <code>/root/addon/</code> 下的插件为例）：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">npx hydrooj addon add /root/addon/</span></div></code></div></pre>
<div></div></div><h2 id="启动-hydro"> 启动 Hydro</h2>
<p>支持如下启动参数：</p>
<ul>
<li><code>--port=8888</code> 指定启动端口</li>
<li><code>--debug</code> 启用开发模式</li>
<li><code>--ignorelock</code> 忽略 lockfile（不建议）</li>
</ul>
<p>您可以在后台运行 <code>yarn build:ui:dev</code>，这将对前端源码进行实时转译，并在 8000 端口启动 webpack-dev-server，可在反复修改时节省编译时间。<br>
您可以使用 <code>yarn debug --port=2333</code> 启动 Hydro，配合上述两个命令同时使用，您可以在 2333 端口访问到 Hydro 实例，且前端的任何更改将即时生效。（更改后端代码后仍需要重启 Hydro 才能生效）</p>
<p>首次启动会要求您填写数据库连接信息。请根据您数据库的安装填写（若无密码则留空）<br>
出现 <code>Storage init fail</code> 提示是正常现象。请按照下文说明创建管理员账户，在系统设置的 file 部分填写 S3 服务的连接信息后重启 Hydro 即可正常使用。</p>
<h2 id="更新"> 更新</h2>
<p>需要更新的时候进入对应仓库文件夹执行 <code>git pull</code>，然后重新 <code>yarn &amp;&amp; yarn build:ui:production</code> 即可。</p>
]]></content:encoded>
    </item>
    <item>
      <title>前端修改</title>
      <link>https://hydro.js.org/dev/frontend-modify/</link>
      <guid>https://hydro.js.org/dev/frontend-modify/</guid>
      <source url="https://hydro.js.org/rss.xml">前端修改</source>
      <pubDate>Fri, 13 Aug 2021 04:13:21 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="前端修改"> 前端修改</h1>
<p>参考 <a href="/docs/system/frontend-modify/">前端修改</a>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>使用 JavaScript 编写插件</title>
      <link>https://hydro.js.org/dev/javascript/</link>
      <guid>https://hydro.js.org/dev/javascript/</guid>
      <source url="https://hydro.js.org/rss.xml">使用 JavaScript 编写插件</source>
      <pubDate>Tue, 02 Feb 2021 07:43:29 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="使用-javascript-编写插件"> 使用 JavaScript 编写插件</h1>
<p>前置条件：NodeJS&gt;10.4<br>
此教程将以编写剪贴板插件为例进行说明。</p>
<p><strong>Hydro v2 已原生支持 TypeScript ，使用 TS 编写的插件无需编译。更加推荐您使用 TypeScript。</strong></p>
<h2 id="step1-初始化项目"> Step1 初始化项目</h2>
<p>使用 <code>hydrooj addon create</code> 快速在 <code>/root/addon</code> 下初始化一个插件或是在一个空文件夹中运行 <code>yarn init</code> 并按照提示填写相关信息。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #616E88"># 使用 yarn init 的样例</span></div><div class='line'><span style="color: #D8DEE9FF">/workspace/hydro-plugin $ yarn init</span></div><div class='line'><span style="color: #D8DEE9FF">yarn init v1.22.4</span></div><div class='line'><span style="color: #D8DEE9FF">question name </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">hydro-plugin</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">: @hydrooj/pastebin</span></div><div class='line'><span style="color: #D8DEE9FF">question version </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">1.0.0</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">: 0.0.1</span></div><div class='line'><span style="color: #D8DEE9FF">question description: HydroOJ的剪贴板组件</span></div><div class='line'><span style="color: #D8DEE9FF">question entry point </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">index.js</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">: package.json</span></div><div class='line'><span style="color: #D8DEE9FF">question repository url: https://github.com/hydro-dev/pastebin.git</span></div><div class='line'><span style="color: #D8DEE9FF">question author: undefined </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">i@undefined.moe</span><span style="color: #81A1C1">&gt;</span></div><div class='line'><span style="color: #D8DEE9FF">question license </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">MIT</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">: MIT</span></div><div class='line'><span style="color: #D8DEE9FF">question private:</span></div><div class='line'><span style="color: #D8DEE9FF">success Saved package.json</span></div></code></div></pre>
<div></div></div><h2 id="step2-准备编写组件"> Step2 准备编写组件</h2>
<p>分析：剪贴板组件需要以下功能：</p>
<ul>
<li>与数据库交互来存储/检索相应文档。</li>
<li>提供 /paste/create 路由以创建新文档。</li>
<li>提供 /paste/show/:ID 来查看已创建的文档。</li>
<li>根据用户ID进行鉴权，允许将文档设置为私密以防止他人查看。</li>
</ul>
<p>Hydro的推荐架构如下：</p>
<ul>
<li>handler.js: 用于处理路由</li>
<li>model.js: 数据库模型</li>
<li>lib.js: 不依赖于数据库等的库（如md5函数）</li>
<li>script.js: 可能会被用户多次使用到的脚本（如重新计算rp）</li>
<li>locale/: 翻译文件</li>
<li>template/: 页面模板</li>
<li>setting.yaml: 模块所用到的设置，格式在下方说明</li>
</ul>
<p>但注意上述结构并非全部必要，可以只创建插件需要使用的结构。</p>
<h2 id="step3-model-js"> Step3 model.js</h2>
<p>提示：由于模块中不便于使用 require() 引入 Hydro 的文件，可以从 global.Hydro 中取出需要的模块。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>js</div><div class='code-container'><code><div class='line'><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">db</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">global</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">Hydro</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">service</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 数据库连接</span></div><div class='line'><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">coll</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">db</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">collection</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">paste</span><span style="color: #ECEFF4">'</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'></div><div class='line'><span style="color: #616E88">/**</span></div><div class='line'><span style="color: #616E88"> * 添加一个文档</span></div><div class='line'><span style="color: #616E88"> * </span><span style="color: #ECEFF4">@</span><span style="color: #8FBCBB">param</span><span style="color: #616E88"> </span><span style="color: #ECEFF4">{</span><span style="color: #616E88">number</span><span style="color: #ECEFF4">}</span><span style="color: #616E88"> </span><span style="color: #D8DEE9">userId</span></div><div class='line'><span style="color: #616E88"> * </span><span style="color: #ECEFF4">@</span><span style="color: #8FBCBB">param</span><span style="color: #616E88"> </span><span style="color: #ECEFF4">{</span><span style="color: #616E88">string</span><span style="color: #ECEFF4">}</span><span style="color: #616E88"> </span><span style="color: #D8DEE9">content</span></div><div class='line'><span style="color: #616E88"> * </span><span style="color: #ECEFF4">@</span><span style="color: #8FBCBB">param</span><span style="color: #616E88"> </span><span style="color: #ECEFF4">{</span><span style="color: #616E88">boolean</span><span style="color: #ECEFF4">}</span><span style="color: #616E88"> </span><span style="color: #D8DEE9">isPrivate</span></div><div class='line'><span style="color: #616E88"> * </span><span style="color: #ECEFF4">@</span><span style="color: #8FBCBB">return</span><span style="color: #616E88"> </span><span style="color: #ECEFF4">{</span><span style="color: #616E88">Promise&lt;string&gt;</span><span style="color: #ECEFF4">}</span></div><div class='line'><span style="color: #616E88"> */</span></div><div class='line'><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">function</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">add</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">userId</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">content</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">isPrivate</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pasteId</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">String</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">random</span><span style="color: #D8DEE9FF">(</span><span style="color: #B48EAD">16</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// Hydro提供了此方法，创建一个长度为16的随机字符串</span></div><div class='line'><span style="color: #ECEFF4">    </span><span style="color: #616E88">// 使用 mongodb 为数据库驱动，相关操作参照其文档</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">result</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">await</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">coll</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">insertOne</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">_id</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pasteId</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">owner</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">userId</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #D8DEE9">content</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #D8DEE9">isPrivate</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">result</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">insertedId</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 返回插入的文档ID</span></div><div class='line'><span style="color: #ECEFF4">}</span></div><div class='line'></div><div class='line'><span style="color: #616E88">/**</span></div><div class='line'><span style="color: #616E88"> * 查询一个文档</span></div><div class='line'><span style="color: #616E88"> * </span><span style="color: #ECEFF4">@</span><span style="color: #8FBCBB">param</span><span style="color: #616E88"> </span><span style="color: #ECEFF4">{</span><span style="color: #616E88">string</span><span style="color: #ECEFF4">}</span><span style="color: #616E88"> </span><span style="color: #D8DEE9">pasteId</span></div><div class='line'><span style="color: #616E88"> * </span><span style="color: #ECEFF4">@</span><span style="color: #8FBCBB">return</span><span style="color: #616E88"> </span><span style="color: #ECEFF4">{</span><span style="color: #616E88">Promise&lt;any&gt;</span><span style="color: #ECEFF4">}</span></div><div class='line'><span style="color: #616E88"> */</span></div><div class='line'><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">function</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9">pasteId</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">await</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">coll</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">findOne</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">_id</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pasteId</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">}</span></div><div class='line'></div><div class='line'><span style="color: #616E88">// 暴露这些接口</span></div><div class='line'><span style="color: #D8DEE9">global</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">Hydro</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">model</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">pastebin</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">add</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">get</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #81A1C1">;</span></div><div class='line'></div></code></div></pre>
<div></div></div><h2 id="step4-handler-js"> Step4 handler.js</h2>
<p>在路由中定义所有的函数应均为异步函数，支持的函数有：prepare, get, post, post[Operation], cleanup
具体流程如下：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div class='code-container'><code><div class='line'><span style="color: undefined">先执行 prepare(args) （如果存在）
args 为传入的参数集合（包括 QueryString, Body, Path）中的全部参数，
再执行 prepare(args) （如果存在）
检查请求类型：

为 GET ？
  -&gt; 执行 get(args)
为 POST ?
  -&gt; 执行 post(args)
  -&gt; 含有 operation 字段？
       -&gt; 执行 post[Operation]

执行 cleanup()</span></div></code></div></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p>如果在 this.response.template 指定模板则渲染，否则直接返回 this.response.body 中的内容。</p>
<ul>
<li>在表单提交时的 operation 字段使用下划线，函数名使用驼峰命名。</li>
</ul>
<p>如 <code>&lt;input type=&quot;hidden&quot; name=&quot;operation&quot; value=&quot;confirm_delete&quot;&gt;</code> 对应 <code>postConfirmDelete</code> 函数。</p>
<p>应当提供 <code>apply</code> 函数，并与定义的 Handler 一同挂载到 <code>global.Hydro.handler[模块名]</code> 位置。
<code>apply</code> 函数将在初始化阶段被调用。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>js</div><div class='code-container'><code><div class='line'><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">Route</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">Handler</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">global</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">Hydro</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">service</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">server</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 注册路由所用工具</span></div><div class='line'><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">PRIV</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">global</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">Hydro</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">model</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">builtin</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 内置 Privilege 权限节点</span></div><div class='line'><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pastebin</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">global</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">Hydro</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">model</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">pastebin</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 刚刚编写的pastebin模型</span></div><div class='line'><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">checkContent</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">global</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">Hydro</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">lib</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">validator</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 用于检查用户输入是否合法</span></div><div class='line'><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">NotFoundError</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">global</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">Hydro</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">error</span><span style="color: #81A1C1">;</span></div><div class='line'></div><div class='line'><span style="color: #616E88">// 创建新路由</span></div><div class='line'><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">PasteCreateHandler</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">extends</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">Handler</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #ECEFF4">    </span><span style="color: #616E88">// Get请求时触发该函数</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// 检查用户是否登录，此处为多余（因为底部注册路由时已声明所需权限）</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// 此方法适用于权限的动态检查</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// this.checkPriv(PRIV.PRIV_USER_PROFILE);</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">response</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">template</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">paste_create.html</span><span style="color: #ECEFF4">'</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 返回此页面</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">}</span></div><div class='line'></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">post</span><span style="color: #ECEFF4">({</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">content</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">private</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">false</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">})</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 从用户提交的表单中取出content和private字段</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">checkContent</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">content</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 检查输入</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// 在HTML表单提交的多选框中，选中值为 'on'，未选中则为空，需要进行转换</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">await</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pastebin</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">add</span><span style="color: #D8DEE9FF">(</span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">user</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">_id</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">content</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">!!</span><span style="color: #D8DEE9">private</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// 将用户重定向到创建完成的url</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">response</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">redirect</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">url</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">paste_show</span><span style="color: #ECEFF4">'</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">id</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pasteid</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">}</span></div><div class='line'><span style="color: #ECEFF4">}</span></div><div class='line'></div><div class='line'><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">PasteShowHandler</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">extends</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">Handler</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">get</span><span style="color: #ECEFF4">({</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">id</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">})</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">doc</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">await</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">pastebin</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">get</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">id</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> (</span><span style="color: #81A1C1">!</span><span style="color: #D8DEE9">doc</span><span style="color: #D8DEE9FF">) </span><span style="color: #81A1C1">throw</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">new</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">NotFoundError</span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9">id</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> (</span><span style="color: #D8DEE9">doc</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">isPrivate</span><span style="color: #D8DEE9FF">) </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> (</span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">user</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">_id</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">!==</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">doc</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">owner</span><span style="color: #D8DEE9FF">) </span><span style="color: #81A1C1">throw</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">new</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">PermissionError</span><span style="color: #D8DEE9FF">()</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">}</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">response</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">body</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">doc</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">response</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">template</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">paste_show.html</span><span style="color: #ECEFF4">'</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">}</span></div><div class='line'></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">postDelete</span><span style="color: #ECEFF4">({</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">id</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">})</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// 当提交表单并存在 operation 值为 delete 时执行。</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// 本例中未实现删除功能，仅作为说明。</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">}</span></div><div class='line'><span style="color: #ECEFF4">}</span></div><div class='line'></div><div class='line'><span style="color: #616E88">// Hydro会在服务初始化完成后调用该函数。</span></div><div class='line'><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">function</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">apply</span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #ECEFF4">    </span><span style="color: #616E88">// 注册一个名为 paste_create 的路由，匹配 '/paste/create'，</span></div><div class='line'><span style="color: #ECEFF4">    </span><span style="color: #616E88">// 使用PasteCreateHandler处理，访问改路由需要PRIV.PRIV_USER_PROFILE权限</span></div><div class='line'><span style="color: #ECEFF4">    </span><span style="color: #616E88">// 提示：路由匹配基于 path-to-regexp</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">Route</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">paste_create</span><span style="color: #ECEFF4">'</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">/paste/create</span><span style="color: #ECEFF4">'</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">PasteCreateHandler</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">PRIV</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">PRIV_USER_PROFILE</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">Route</span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">paste_show</span><span style="color: #ECEFF4">'</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">/paste/show/:id</span><span style="color: #ECEFF4">'</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">PasteShowHandler</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">}</span></div><div class='line'></div><div class='line'><span style="color: #D8DEE9">global</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">Hydro</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">handler</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9">pastebin</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">apply</span><span style="color: #81A1C1">;</span></div></code></div></pre>
<div></div></div><h2 id="step5-template"> Step5 template</h2>
<p>模板采用 nunjucks 语法。放置于 templates/ 文件夹下。<br>
会在请求结束时根据 <code>response.template</code> 的值选择模板，并使用 <code>response.body</code> 的值进行渲染，存入 <code>response.body</code> 中。<br>
若 <code>response.template</code> 为空或 <code>request.headers['accept'] == 'application/json'</code>，则跳过渲染步骤。</p>
<h2 id="step6-locale"> Step6 locale</h2>
<p>用于提供多国翻译。格式与 Hydro 的 locale 文件夹格式相同。</p>
]]></content:encoded>
    </item>
    <item>
      <title>使用 TypeScript 编写插件</title>
      <link>https://hydro.js.org/dev/typescript/</link>
      <guid>https://hydro.js.org/dev/typescript/</guid>
      <source url="https://hydro.js.org/rss.xml">使用 TypeScript 编写插件</source>
      <pubDate>Tue, 02 Feb 2021 07:43:29 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="使用-typescript-编写插件"> 使用 TypeScript 编写插件</h1>
<p>前置条件：NodeJS&gt;10.4<br>
此教程将以编写剪贴板插件为例进行说明。</p>
<h2 id="step1-初始化项目"> Step1 初始化项目</h2>
<p>使用 <code>hydrooj addon create</code> 快速在 <code>/root/addon</code> 下初始化一个插件或是在一个空文件夹中运行 <code>yarn init</code> 并按照提示填写相关信息。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #616E88"># 使用 yarn init 的样例</span></div><div class='line'><span style="color: #D8DEE9FF">/workspace/hydro-plugin $ yarn init</span></div><div class='line'><span style="color: #D8DEE9FF">yarn init v1.22.4</span></div><div class='line'><span style="color: #D8DEE9FF">question name </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">hydro-plugin</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">: @hydrooj/pastebin</span></div><div class='line'><span style="color: #D8DEE9FF">question version </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">1.0.0</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">: 0.0.1</span></div><div class='line'><span style="color: #D8DEE9FF">question description: HydroOJ的剪贴板组件</span></div><div class='line'><span style="color: #D8DEE9FF">question entry point </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">index.js</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">: package.json</span></div><div class='line'><span style="color: #D8DEE9FF">question repository url: https://github.com/hydro-dev/pastebin.git</span></div><div class='line'><span style="color: #D8DEE9FF">question author: undefined </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">i@undefined.moe</span><span style="color: #81A1C1">&gt;</span></div><div class='line'><span style="color: #D8DEE9FF">question license </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">MIT</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF">: MIT</span></div><div class='line'><span style="color: #D8DEE9FF">question private:</span></div><div class='line'><span style="color: #D8DEE9FF">success Saved package.json</span></div></code></div></pre>
<div></div></div><h2 id="step2-准备编写组件"> Step2 准备编写组件</h2>
<p>分析：剪贴板组件需要以下功能：</p>
<ul>
<li>与数据库交互来存储/检索相应文档。</li>
<li>提供 /paste/create 路由以创建新文档。</li>
<li>提供 /paste/show/:ID 来查看已创建的文档。</li>
<li>根据用户ID进行鉴权，允许将文档设置为私密以防止他人查看。</li>
</ul>
<p>Hydro的推荐架构如下：</p>
<ul>
<li>handler.ts: 用于处理路由</li>
<li>model.ts: 数据库模型</li>
<li>lib.ts: 不依赖于数据库等的库（如 <code>md5</code> 函数）</li>
<li>script.ts: 可能会被用户多次使用到的脚本（如重新计算 <code>rp</code> ）</li>
<li>locale/: 翻译文件</li>
<li>template/: 页面模板</li>
<li>setting.yaml: 模块所用到的设置，格式在下方说明</li>
</ul>
<p>但注意上述结构并非全部必要，可以只创建插件需要使用的结构。</p>
<p>在路由中定义所有的函数应均为异步函数，支持的函数有：prepare, get, post, post[Operation], cleanup<br>
具体流程如下：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div class='code-container'><code><div class='line'><span style="color: undefined">先执行 prepare(args) （如果存在）
args 为传入的参数集合（包括 QueryString, Body, Path）中的全部参数，
再执行 prepare(args) （如果存在）
检查请求类型：

为 GET ？
  -&gt; 执行 get(args)
为 POST ?
  -&gt; 执行 post(args)
  -&gt; 含有 operation 字段？
       -&gt; 执行 post[Operation]

执行 cleanup()</span></div></code></div></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p>如果在 this.response.template 指定模板则渲染，否则直接返回 this.response.body 中的内容。</p>
<ul>
<li>在表单提交时的 operation 字段使用下划线，函数名使用驼峰命名。</li>
</ul>
<p>如 <code>&lt;input type=&quot;hidden&quot; name=&quot;operation&quot; value=&quot;confirm_delete&quot;&gt;</code> 对应 <code>postConfirmDelete</code> 函数。</p>
<p>应当提供 <code>apply</code> 函数，并与定义的 Handler 一同挂载到 <code>global.Hydro.handler[模块名]</code> 位置。
<code>apply</code> 函数将在初始化阶段被调用。</p>
<h1 id="step3-model-handler"> Step3 model&amp;handler</h1>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>ts</div><div class='code-container'><code><div class='line'><span style="color: #616E88">// @filename: model.ts</span></div><div class='line'><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">hydrooj</span><span style="color: #ECEFF4">&apos;</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">*</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) const db: MongoService&#10;import db' >db</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">hydrooj/src/service/db</span><span style="color: #ECEFF4">&apos;</span><span style="color: #81A1C1">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const coll: Collection&lt;Collections[K]>' >coll</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) const db: MongoService&#10;import db' >db</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0"><data-lsp lsp='(method) MongoService.collection&lt;"paste">(c: "paste"): Collection&lt;Collections[K]>' >collection</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">paste</span><span style="color: #ECEFF4">&apos;</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #81A1C1">interface</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB"><data-lsp lsp='interface Paste' >Paste</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    <data-lsp lsp='(property) Paste._id: string' >_id</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">string</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    <data-lsp lsp='(property) Paste.owner: number' >owner</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">number</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    <data-lsp lsp='(property) Paste.content: string' >content</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">string</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    <data-lsp lsp='(property) Paste.isPrivate: boolean' >isPrivate</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">boolean</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #81A1C1">declare</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">module</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">hydrooj/src/interface</span><span style="color: #ECEFF4">&apos;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">interface</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB"><data-lsp lsp='interface Model' >Model</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">        <data-lsp lsp='(property) Model.pastebin: {&#10;    add: (userId: number, content: string, isPrivate: boolean) => Promise&lt;string>;&#10;    get: (pasteId: string) => Promise&lt;Paste>;&#10;}' >pastebin</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">typeof</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const pastebinModel: {&#10;    add: (userId: number, content: string, isPrivate: boolean) => Promise&lt;string>;&#10;    get: (pasteId: string) => Promise&lt;Paste>;&#10;}' >pastebinModel</data-lsp></span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">}</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">interface</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB"><data-lsp lsp='interface Collections' >Collections</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">        <data-lsp lsp='(property) Collections.paste: Paste' >paste</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB"><data-lsp lsp='interface Paste' >Paste</data-lsp></span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 声明数据表类型</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">}</span></div><div class='line'><span style="color: #ECEFF4">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #81A1C1">export</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">function</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0"><data-lsp lsp='function add(userId: number, content: string, isPrivate: boolean): Promise&lt;string>' >add</data-lsp></span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) userId: number' >userId</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">number</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) content: string' >content</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">string</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) isPrivate: boolean' >isPrivate</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">boolean</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB"><data-lsp lsp='interface Promise&lt;T>' >Promise</data-lsp></span><span style="color: #ECEFF4">&lt;</span><span style="color: #8FBCBB">string</span><span style="color: #ECEFF4">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const pasteId: string' >pasteId</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB"><data-lsp lsp='var String: StringConstructor' >String</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0"><data-lsp lsp='(property) StringConstructor.random: (digit?: number | undefined) => string' >random</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #B48EAD">16</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// Hydro 提供了此方法，创建一个长度为16的随机字符串</span></div><div class='line'><span style="color: #ECEFF4">    </span><span style="color: #616E88">// 使用 mongodb 为数据库驱动，相关操作参照其文档</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const result: any' >result</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">await</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const coll: Collection&lt;Collections[K]>' >coll</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0"><data-lsp lsp='any' >insertOne</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #D8DEE9"><data-lsp lsp='(property) _id: string' >_id</data-lsp></span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const pasteId: string' >pasteId</data-lsp></span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #D8DEE9"><data-lsp lsp='(property) owner: number' >owner</data-lsp></span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) userId: number' >userId</data-lsp></span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #D8DEE9"><data-lsp lsp='(property) content: string' >content</data-lsp></span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #D8DEE9"><data-lsp lsp='(property) isPrivate: boolean' >isPrivate</data-lsp></span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const result: any' >result</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='any' >insertedId</data-lsp></span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 返回插入的文档ID</span></div><div class='line'><span style="color: #ECEFF4">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #81A1C1">export</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">function</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0"><data-lsp lsp='function get(pasteId: string): Promise&lt;Paste>' >get</data-lsp></span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) pasteId: string' >pasteId</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">string</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB"><data-lsp lsp='interface Promise&lt;T>' >Promise</data-lsp></span><span style="color: #ECEFF4">&lt;</span><span style="color: #8FBCBB"><data-lsp lsp='interface Paste' >Paste</data-lsp></span><span style="color: #ECEFF4">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">await</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const coll: Collection&lt;Collections[K]>' >coll</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0"><data-lsp lsp='any' >findOne</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(property) _id: string' >_id</data-lsp></span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) pasteId: string' >pasteId</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #616E88">// 暴露这些接口</span></div><div class='line'><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const pastebinModel: {&#10;    add: (userId: number, content: string, isPrivate: boolean) => Promise&lt;string>;&#10;    get: (pasteId: string) => Promise&lt;Paste>;&#10;}' >pastebinModel</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(property) add: (userId: number, content: string, isPrivate: boolean) => Promise&lt;string>' >add</data-lsp></span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(property) get: (pasteId: string) => Promise&lt;Paste>' >get</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9"><data-lsp lsp='var global: NodeJS.Global &amp; typeof globalThis' >global</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) Hydro: HydroGlobal' >Hydro</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) HydroGlobal.model: Model' >model</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) Model.pastebin: {&#10;    add: (userId: number, content: string, isPrivate: boolean) => Promise&lt;string>;&#10;    get: (pasteId: string) => Promise&lt;Paste>;&#10;}' >pastebin</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const pastebinModel: {&#10;    add: (userId: number, content: string, isPrivate: boolean) => Promise&lt;string>;&#10;    get: (pasteId: string) => Promise&lt;Paste>;&#10;}' >pastebinModel</data-lsp></span><span style="color: #81A1C1">;</span></div><div class='line'>&nbsp;</div><div class='line'>&nbsp;</div><div class='line'><span style="color: #616E88">// @filename: handler.ts</span></div><div class='line'><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) function Route(name: string, path: string, RouteHandler: any, ...permPrivChecker: any[]): void&#10;import Route' >Route</data-lsp></span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) class Handler&#10;import Handler' >Handler</data-lsp></span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) interface Types&#10;(alias) const Types: Types&#10;import Types' >Types</data-lsp></span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) const param: DescriptorBuilder&#10;import param' >param</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">hydrooj/src/service/server</span><span style="color: #ECEFF4">&apos;</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) const PRIV: {&#10;    PRIV_NONE: number;&#10;    PRIV_MOD_BADGE: number;&#10;    PRIV_EDIT_SYSTEM: number;&#10;    PRIV_SET_PERM: number;&#10;    PRIV_USER_PROFILE: number;&#10;    PRIV_REGISTER_USER: number;&#10;    PRIV_READ_PROBLEM_DATA: number;&#10;    PRIV_READ_RECORD_CODE: number;&#10;    ... 19 more ...;&#10;    PRIV_DELETE_FILE_SELF: number;&#10;}&#10;import PRIV' >PRIV</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">hydrooj/src/model/builtin</span><span style="color: #ECEFF4">&apos;</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 内置 Privilege 权限节点</span></div><div class='line'><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) const isContent: (s: any) => any&#10;import isContent' >isContent</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">hydrooj/src/lib/validator</span><span style="color: #ECEFF4">&apos;</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 用于检查用户输入是否合法</span></div><div class='line'><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) const NotFoundError: typeof HydroError&#10;import NotFoundError' >NotFoundError</data-lsp></span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) const PermissionError: typeof HydroError&#10;import PermissionError' >PermissionError</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">hydrooj/src/error</span><span style="color: #ECEFF4">&apos;</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #81A1C1">import</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">*</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">as</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='import pastebin' >pastebin</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">from</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">./model</span><span style="color: #ECEFF4">&apos;</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 刚刚编写的pastebin模型</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #616E88">// 创建新路由</span></div><div class='line'><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB"><data-lsp lsp='class PasteCreateHandler' >PasteCreateHandler</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">extends</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB"><data-lsp lsp='(alias) class Handler&#10;import Handler' >Handler</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #ECEFF4">    </span><span style="color: #616E88">// Get请求时触发该函数</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0"><data-lsp lsp='(method) PasteCreateHandler.get(): Promise&lt;void>' >get</data-lsp></span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// 检查用户是否登录，此处为多余（因为底部注册路由时已声明所需权限）</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// 此方法适用于权限的动态检查</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// this.checkPriv(PRIV.PRIV_USER_PROFILE);</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) Handler.response: {&#10;    body: any;&#10;    type: string;&#10;    status: number;&#10;    template?: string | undefined;&#10;    redirect?: string | undefined;&#10;    disposition?: string | undefined;&#10;    etag?: string | undefined;&#10;    attachment: (name: string, stream?: any) => void;&#10;    addHeader: (name: string, value: string) => void;&#10;}' >response</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) template?: string | undefined' >template</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">paste_create.html</span><span style="color: #ECEFF4">&apos;</span><span style="color: #81A1C1">;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88">// 返回此页面</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #ECEFF4">    </span><span style="color: #616E88">// 使用 isContent 检查输入</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #D08770">@<data-lsp lsp='(alias) param(name: string, ...args: (boolean | Type | Converter | Validator)[]): MethodDecorator (+4 overloads)&#10;import param' >param</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">content</span><span style="color: #ECEFF4">&apos;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) const Types: Types&#10;import Types' >Types</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) Types.String: Type' >String</data-lsp></span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D08770"><data-lsp lsp='(alias) const isContent: (s: any) => any&#10;import isContent' >isContent</data-lsp></span><span style="color: #D8DEE9FF">)</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #D08770">@<data-lsp lsp='(alias) param(name: string, type: Type): MethodDecorator (+4 overloads)&#10;import param' >param</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">private</span><span style="color: #ECEFF4">&apos;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) const Types: Types&#10;import Types' >Types</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) Types.Boolean: Type' >Boolean</data-lsp></span><span style="color: #D8DEE9FF">)</span></div><div class='line'><span style="color: #ECEFF4">    </span><span style="color: #616E88">// 从用户提交的表单中取出content和private字段</span></div><div class='line'><span style="color: #ECEFF4">    </span><span style="color: #616E88">// domainId 为固定传入参数</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0"><data-lsp lsp='(method) PasteCreateHandler.post(domainId: string, content: string, isPrivate?: boolean): Promise&lt;void>' >post</data-lsp></span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) domainId: string' >domainId</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">string</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) content: string' >content</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">string</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) isPrivate: boolean' >isPrivate</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">false</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// 在HTML表单提交的多选框中，选中值为 &apos;on&apos;，未选中则为空，需要进行转换</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const pasteid: string' >pasteid</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">await</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='import pastebin' >pastebin</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0"><data-lsp lsp='function add(userId: number, content: string, isPrivate: boolean): Promise&lt;string>' >add</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) HandlerCommon.user: User' >user</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) User._id: number' >_id</data-lsp></span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) content: string' >content</data-lsp></span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">!!</span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) isPrivate: boolean' >isPrivate</data-lsp></span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// 将用户重定向到创建完成的url</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) Handler.response: {&#10;    body: any;&#10;    type: string;&#10;    status: number;&#10;    template?: string | undefined;&#10;    redirect?: string | undefined;&#10;    disposition?: string | undefined;&#10;    etag?: string | undefined;&#10;    attachment: (name: string, stream?: any) => void;&#10;    addHeader: (name: string, value: string) => void;&#10;}' >response</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) redirect?: string | undefined' >redirect</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0"><data-lsp lsp='(method) HandlerCommon.url(name: string, kwargs?: any): string' >url</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">paste_show</span><span style="color: #ECEFF4">&apos;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(property) id: string' >id</data-lsp></span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const pasteid: string' >pasteid</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// 相应的，提供了 this.back() 方法用于将用户重定向至前一个地址（通常用于 Ajax 或是部分更新操作）</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">}</span></div><div class='line'><span style="color: #ECEFF4">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #81A1C1">class</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB"><data-lsp lsp='class PasteShowHandler' >PasteShowHandler</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">extends</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB"><data-lsp lsp='(alias) class Handler&#10;import Handler' >Handler</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #D08770">@<data-lsp lsp='(alias) param(name: string, type: Type): MethodDecorator (+4 overloads)&#10;import param' >param</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">id</span><span style="color: #ECEFF4">&apos;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) const Types: Types&#10;import Types' >Types</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) Types.String: Type' >String</data-lsp></span><span style="color: #D8DEE9FF">)</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0"><data-lsp lsp='(method) PasteShowHandler.get(domainId: string, id: string): Promise&lt;void>' >get</data-lsp></span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) domainId: string' >domainId</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">string</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) id: string' >id</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">string</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">const</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const doc: Paste' >doc</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">await</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='import pastebin' >pastebin</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0"><data-lsp lsp='function get(pasteId: string): Promise&lt;Paste>' >get</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) id: string' >id</data-lsp></span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> (</span><span style="color: #81A1C1">!</span><span style="color: #D8DEE9"><data-lsp lsp='const doc: Paste' >doc</data-lsp></span><span style="color: #D8DEE9FF">) </span><span style="color: #81A1C1">throw</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">new</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0"><data-lsp lsp='(alias) new NotFoundError(...args: any[]): HydroError&#10;import NotFoundError' >NotFoundError</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) id: string' >id</data-lsp></span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> (</span><span style="color: #D8DEE9"><data-lsp lsp='const doc: Paste' >doc</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) Paste.isPrivate: boolean' >isPrivate</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&&</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) HandlerCommon.user: User' >user</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) User._id: number' >_id</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">!==</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='const doc: Paste' >doc</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) Paste.owner: number' >owner</data-lsp></span><span style="color: #D8DEE9FF">) </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">            </span><span style="color: #81A1C1">throw</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">new</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0"><data-lsp lsp='(alias) new PermissionError(...args: any[]): HydroError&#10;import PermissionError' >PermissionError</data-lsp></span><span style="color: #D8DEE9FF">()</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #ECEFF4">}</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) Handler.response: {&#10;    body: any;&#10;    type: string;&#10;    status: number;&#10;    template?: string | undefined;&#10;    redirect?: string | undefined;&#10;    disposition?: string | undefined;&#10;    etag?: string | undefined;&#10;    attachment: (name: string, stream?: any) => void;&#10;    addHeader: (name: string, value: string) => void;&#10;}' >response</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) body: any' >body</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(property) doc: Paste' >doc</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">}</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #81A1C1">this</span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) Handler.response: {&#10;    body: any;&#10;    type: string;&#10;    status: number;&#10;    template?: string | undefined;&#10;    redirect?: string | undefined;&#10;    disposition?: string | undefined;&#10;    etag?: string | undefined;&#10;    attachment: (name: string, stream?: any) => void;&#10;    addHeader: (name: string, value: string) => void;&#10;}' >response</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) template?: string | undefined' >template</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">paste_show.html</span><span style="color: #ECEFF4">&apos;</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #D08770">@<data-lsp lsp='(alias) param(name: string, type: Type): MethodDecorator (+4 overloads)&#10;import param' >param</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">id</span><span style="color: #ECEFF4">&apos;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) const Types: Types&#10;import Types' >Types</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) Types.String: Type' >String</data-lsp></span><span style="color: #D8DEE9FF">)</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0"><data-lsp lsp='(method) PasteShowHandler.postDelete(domainId: string, id: string): Promise&lt;void>' >postDelete</data-lsp></span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) domainId: string' >domainId</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">string</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(parameter) id: string' >id</data-lsp></span><span style="color: #81A1C1">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">string</span><span style="color: #ECEFF4">)</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// 当提交表单并存在 operation 值为 delete 时执行。</span></div><div class='line'><span style="color: #ECEFF4">        </span><span style="color: #616E88">// 本例中未实现删除功能，仅作为说明。</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">}</span></div><div class='line'><span style="color: #ECEFF4">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #616E88">// Hydro会在服务初始化完成后调用该函数。</span></div><div class='line'><span style="color: #81A1C1">export</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">async</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">function</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0"><data-lsp lsp='function apply(): Promise&lt;void>' >apply</data-lsp></span><span style="color: #ECEFF4">()</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #ECEFF4">    </span><span style="color: #616E88">// 注册一个名为 paste_create 的路由，匹配 &apos;/paste/create&apos;，</span></div><div class='line'><span style="color: #ECEFF4">    </span><span style="color: #616E88">// 使用PasteCreateHandler处理，访问改路由需要PRIV.PRIV_USER_PROFILE权限</span></div><div class='line'><span style="color: #ECEFF4">    </span><span style="color: #616E88">// 提示：路由匹配基于 path-to-regexp</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0"><data-lsp lsp='(alias) Route(name: string, path: string, RouteHandler: any, ...permPrivChecker: any[]): void&#10;import Route' >Route</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">paste_create</span><span style="color: #ECEFF4">&apos;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">/paste/create</span><span style="color: #ECEFF4">&apos;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='class PasteCreateHandler' >PasteCreateHandler</data-lsp></span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='(alias) const PRIV: {&#10;    PRIV_NONE: number;&#10;    PRIV_MOD_BADGE: number;&#10;    PRIV_EDIT_SYSTEM: number;&#10;    PRIV_SET_PERM: number;&#10;    PRIV_USER_PROFILE: number;&#10;    PRIV_REGISTER_USER: number;&#10;    PRIV_READ_PROBLEM_DATA: number;&#10;    PRIV_READ_RECORD_CODE: number;&#10;    ... 19 more ...;&#10;    PRIV_DELETE_FILE_SELF: number;&#10;}&#10;import PRIV' >PRIV</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) PRIV_USER_PROFILE: number' >PRIV_USER_PROFILE</data-lsp></span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0"><data-lsp lsp='(alias) Route(name: string, path: string, RouteHandler: any, ...permPrivChecker: any[]): void&#10;import Route' >Route</data-lsp></span><span style="color: #D8DEE9FF">(</span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">paste_show</span><span style="color: #ECEFF4">&apos;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">&apos;</span><span style="color: #A3BE8C">/paste/show/:id</span><span style="color: #ECEFF4">&apos;</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='class PasteShowHandler' >PasteShowHandler</data-lsp></span><span style="color: #D8DEE9FF">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">}</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #D8DEE9"><data-lsp lsp='var global: NodeJS.Global &amp; typeof globalThis' >global</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) Hydro: HydroGlobal' >Hydro</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='(property) HydroGlobal.handler: Record&lt;string, Function>' >handler</data-lsp></span><span style="color: #ECEFF4">.</span><span style="color: #D8DEE9"><data-lsp lsp='Function' >pastebin</data-lsp></span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9"><data-lsp lsp='function apply(): Promise&lt;void>' >apply</data-lsp></span><span style="color: #81A1C1">;</span></div></code></div></pre>
<div></div></div><h2 id="step4-template"> Step4 template</h2>
<p>模板采用 nunjucks 语法。放置于 <code>templates/</code> 文件夹下。<br>
会在请求结束时根据 <code>response.template</code> 的值选择模板，并使用 <code>response.body</code> 的值进行渲染，存入 <code>response.body</code> 中。<br>
若 <code>response.template</code> 为空或 <code>request.headers['accept'] == 'application/json'</code>，则跳过渲染步骤。</p>
<h2 id="step5-locale"> Step5 locale</h2>
<p>用于提供多国翻译。格式与 Hydro 的 locale 文件夹格式相同。</p>
]]></content:encoded>
    </item>
    <item>
      <title>介绍</title>
      <link>https://hydro.js.org/docs/</link>
      <guid>https://hydro.js.org/docs/</guid>
      <source url="https://hydro.js.org/rss.xml">介绍</source>
      <pubDate>Mon, 25 Jan 2021 18:27:09 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="介绍"> 介绍</h1>
<p>为什么使用 Hydro？</p>
<ul>
<li>
<p>安全：使用 cgroup 进行隔离，杜绝卡评测；</p>
</li>
<li>
<p>高效：Hydro 使用了沙箱复用技术，拥有极高的评测效率；</p>
</li>
<li>
<p>扩展：Hydro 支持安装额外模块进行扩展；</p>
</li>
<li>
<p>强大：配合 Judge 模块（或 HydroJudge 独立评测机），可支持 spj，交互题，提交答案题，文件IO 等多种特性；</p>
</li>
<li>
<p>自定：所有权限节点均可自由设置；</p>
</li>
<li>
<p>易上手：无需改动源代码，系统设置中预留了大量可自行修改的内容；管理逻辑简洁；</p>
</li>
<li>
<p>社区：Hydro 正在持续维护中；</p>
</li>
<li>
<p>如果您正在使用 HustOJ，可以导出题目为 FPS 文件后使用 <a href="/plugins/fps-importer">fps-importer 插件</a> 直接导入 Hydro。</p>
</li>
<li>
<p>如果您正在使用 QDUOJ， 可以导出题目为 QDUOJ-zip 格式后使用 import-qduoj 插件直接导入 Hydro。</p>
</li>
<li>
<p>如果您正在使用 Vijos， 可以直接使用 <a href="/plugins/migrate-vijos">migrate-vijos 插件</a> 导入所有数据至 Hydro。</p>
</li>
<li>
<p>如果您正在使用 SYZOJ 或是 SYZOJ-NG，可以使用内置的 <a href="/docs/user/problem/#从-syzoj-导入">Import From SYZOJ 功能</a> 将题目导入 Hydro。</p>
</li>
</ul>
<h2 id="功能对比"> 功能对比</h2>
<p>此处对比了 Hydro 与其他主流 OJ 系统的功能。（只进行在不修改源代码情况下的对比）</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div class='code-container'><code>+：支持
=：部分支持
?: 未知
-：不支持</code></div></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><table>
<thead>
<tr>
<th style="text-align:center">功能</th>
<th style="text-align:center">Hydro</th>
<th style="text-align:center">HustOJ</th>
<th style="text-align:center">SYZOJ</th>
<th style="text-align:center">QDUOJ</th>
<th style="text-align:center">Vijos</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">安装</td>
<td style="text-align:center">一键脚本</td>
<td style="text-align:center">一键脚本</td>
<td style="text-align:center">手动搭建</td>
<td style="text-align:center">docker</td>
<td style="text-align:center">docker</td>
</tr>
<tr>
<td style="text-align:center">数据库</td>
<td style="text-align:center">MongoDB</td>
<td style="text-align:center">MySQL</td>
<td style="text-align:center">MariaDB</td>
<td style="text-align:center">Postgres</td>
<td style="text-align:center">MongoDB</td>
</tr>
<tr>
<td style="text-align:center">测试数据存储</td>
<td style="text-align:center">本地/S3 <sup></sup></td>
<td style="text-align:center">本地</td>
<td style="text-align:center">本地</td>
<td style="text-align:center">本地</td>
<td style="text-align:center">数据库</td>
</tr>
<tr>
<td style="text-align:center">多评测机</td>
<td style="text-align:center">+</td>
<td style="text-align:center">=</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
</tr>
<tr>
<td style="text-align:center">测试数据同步</td>
<td style="text-align:center">按需抓取</td>
<td style="text-align:center">全量同步</td>
<td style="text-align:center">全量同步</td>
<td style="text-align:center">全量同步</td>
<td style="text-align:center">按需抓取</td>
</tr>
<tr>
<td style="text-align:center">比赛</td>
<td style="text-align:center">ACM/OI/IOI</td>
<td style="text-align:center">ACM/OI <sup></sup></td>
<td style="text-align:center">ACM/OI/IOI</td>
<td style="text-align:center">ACM/OI/IOI</td>
<td style="text-align:center">ACM/OI</td>
</tr>
<tr>
<td style="text-align:center">作业功能</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">+</td>
</tr>
<tr>
<td style="text-align:center">修改编译命令/添加语言</td>
<td style="text-align:center">+</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">+</td>
</tr>
<tr>
<td style="text-align:center">权限系统 <sup></sup></td>
<td style="text-align:center">+</td>
<td style="text-align:center">+ <sup></sup></td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">+</td>
</tr>
<tr>
<td style="text-align:center">训练计划(题单)</td>
<td style="text-align:center">+</td>
<td style="text-align:center">- <sup></sup></td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">+</td>
</tr>
<tr>
<td style="text-align:center">团队</td>
<td style="text-align:center">+ <sup></sup></td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">+</td>
</tr>
<tr>
<td style="text-align:center">Hack</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
</tr>
<tr>
<td style="text-align:center">SpecialJudge</td>
<td style="text-align:center">+ <sup></sup></td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
</tr>
<tr>
<td style="text-align:center">Subtask</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
</tr>
<tr>
<td style="text-align:center">交互题</td>
<td style="text-align:center">+</td>
<td style="text-align:center">-</td>
<td style="text-align:center">+</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
</tr>
<tr>
<td style="text-align:center">RemoteJudge</td>
<td style="text-align:center">Codeforces/SPOJ/UOJ/POJ</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
<td style="text-align:center">-</td>
</tr>
<tr>
<td style="text-align:center">题目导入</td>
<td style="text-align:center">fps/syzoj/qduoj/hydro</td>
<td style="text-align:center">fps</td>
<td style="text-align:center">syzoj</td>
<td style="text-align:center">fps</td>
<td style="text-align:center">-</td>
</tr>
<tr>
<td style="text-align:center">后端语言</td>
<td style="text-align:center">NodeJS</td>
<td style="text-align:center">PHP</td>
<td style="text-align:center">NodeJS</td>
<td style="text-align:center">Python</td>
<td style="text-align:center">Python</td>
</tr>
<tr>
<td style="text-align:center">前端框架</td>
<td style="text-align:center">React</td>
<td style="text-align:center">BootStrap</td>
<td style="text-align:center">Semantic UI</td>
<td style="text-align:center">Vue</td>
<td style="text-align:center">React</td>
</tr>
</tbody>
</table>
<h2 id="截图"> 截图</h2>
<p><img src="./pictures/pict1.png" alt="img" loading="lazy">
<img src="./pictures/pict2.png" alt="img" loading="lazy">
<img src="./pictures/pict3.png" alt="img" loading="lazy">
<img src="./pictures/pict4.png" alt="img" loading="lazy"></p>
<h2 id="现在开始"> 现在开始</h2>
<p>点击 <a href="/docs/install/">部署</a> ，开始部署您的 OJ 吧！</p>
<hr>
<section>
<ol>
<li id="footnote1"><p>S3 指所有兼容 Amazon S3 协议的服务，包括腾讯COS，阿里OSS 等。 </p>
</li>
<li id="footnote2"><p>切换比赛模式仅能通过修改设置全局更改。 </p>
</li>
<li id="footnote3"><p>此处的权限系统指 除用户/管理员二元化权限之外的 的更细粒度的权限划分。 </p>
</li>
<li id="footnote4"><p>HustOJ的权限管理需要手动操作数据库。 </p>
</li>
<li id="footnote5"><p>部分第三方修改版提供了该功能，但未开源。 </p>
</li>
<li id="footnote6"><p>通过域功能，允许用户创建域并在域内拥有管理员权限。域之间仅共享账号数据。 </p>
</li>
<li id="footnote7"><p>支持所有主流 SPJ 格式。 </p>
</li>
</ol>
</section>
]]></content:encoded>
    </item>
    <item>
      <title>部署 Hydro</title>
      <link>https://hydro.js.org/docs/install/</link>
      <guid>https://hydro.js.org/docs/install/</guid>
      <source url="https://hydro.js.org/rss.xml">部署 Hydro</source>
      <pubDate>Sat, 08 May 2021 17:02:49 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="部署-hydro"> 部署 Hydro</h1>
<p>本页面将指导您部署 Hydro。<br>
这里提供了几套方案帮助您建立自己的站点，请选择适合您的方案并继续。<br>
搭建过程中如果遇到问题欢迎 <a href="/#联系我们">联系我们</a> 提问。</p>
<h2 id="服务器选择"> 服务器选择</h2>
<p>不同服务商提供的 CPU 主频不同，下方数据仅供参考。<br>
最低服务器配置： CPU: 1核 内存: 1G 硬盘: 20G。（约可允许 50 人同时使用）<br>
推荐服务器配置： CPU: 1核 内存: 2G 硬盘: 30G。（约可允许 150 人同时使用）<br>
<strong>请尽量不要使用突发性能实例或共享型实例，这可能会导致评测时间计量不准确</strong></p>
<h2 id="部署"> 部署</h2>
<h3 id="自动安装脚本部署"> 自动安装脚本部署</h3>
<div><p>Note</p>
<h3 id="关于-centos"> 关于 CentOS</h3>
<p>CentOS 8 <a href="https://www.centos.org/centos-linux-eol/" target="_blank" rel="noopener noreferrer">已于 2021-12-31 停止支持</a>，Hydro 也不再对该系统提供兼容性测试。<br>
考虑到 CentOS 的内核过于老旧，我们推荐您切换到纯净的 Ubuntu20.04 系统来避免潜在的安全性问题。</p>
</div>
<div><p>Tips</p>
<p>兼容性说明：自动安装脚本将会在您的机器上安装
<a href="https://www.mongodb.com/try/download/community" target="_blank" rel="noopener noreferrer">MongoDB</a>、
<a href="https://min.io/download" target="_blank" rel="noopener noreferrer">MinIO</a>、
<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener noreferrer">NodeJS</a>。
如果您的机器上已经安装过上述软件，建议您重置该系统或是参考安装脚本内容自行完成 Hydro 安装。<br>
同时，Hydro 需要以下端口： 8888, 9000, 5050, 27017，请确保这些端口空闲。<br>
如果安装 MongoDB 时资源下载慢，可以百度 <code>Ubuntu 换源</code> 。<br>
<strong>安装和安装后的所有操作均需要在 root 权限下进行！（<code>sudo su</code>）</strong>。
<strong>请不熟悉 Hydro 架构的用户务必使用自动安装脚本部署</strong>。<br>
<strong>非常不建议您在生产环境使用宝塔面板。</strong></p>
</div>
<div><p>Tips</p>
<p>自动安装脚本目前支持 <code>Ubuntu 16.04</code>、<code>Ubuntu 18.04</code>、<code>Ubuntu 20.04</code>、<code>Arch Linux</code>，推荐使用 <code>Ubuntu 20.04</code>。<br>
如果需要在其他操作系统上安装 Hydro，请使用手动安装。<br>
特别注意： HydroJudge 模块目前仅支持运行于 <code>Linux x64</code> 平台。</p>
</div>
<div><p>Note</p>
<p><strong>请注意！ 由于 Let's Encrypt 根证书更新，可能会出现证书校验失败的问题，请先使用 <code>apt-get upgrade openssl -y</code> 更新 <code>openssl</code> 版本后继续操作！若更新中出现弹框，全部按照默认选择回车确认即可</strong></p>
</div>
<p>运行下面的脚本，等待几分钟即可：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">LANG=zh bash </span><span style="color: #ECEFF4">&lt;(</span><span style="color: #A3BE8C">curl https://hydro.ac/install.sh</span><span style="color: #ECEFF4">)</span></div></code></div></pre>
<div></div></div><p>上面的脚本默认使用的为 tsinghua 镜像，部分海外服务器可能会出现速度过慢等问题。<br>
如果您出现了该问题，可以通过运行下面的脚本，实现 official 镜像安装：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">LANG=zh MIRROR=official bash </span><span style="color: #ECEFF4">&lt;(</span><span style="color: #A3BE8C">curl https://hydro.ac/install.sh</span><span style="color: #ECEFF4">)</span></div></code></div></pre>
<div></div></div><h3 id="开发环境部署"> 开发环境部署</h3>
<p>参考 <a href="/dev/">开发环境部署</a>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>初始化</title>
      <link>https://hydro.js.org/docs/install/init/</link>
      <guid>https://hydro.js.org/docs/install/init/</guid>
      <source url="https://hydro.js.org/rss.xml">初始化</source>
      <pubDate>Fri, 13 Aug 2021 04:13:21 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="初始化"> 初始化</h1>
<p>安装完成后请先重启 bash。（关闭终端重新打开或是重新连接 ssh）<br>
请尝试通过 <code>http://服务器ip:8888/</code> 访问 Hydro 并注册一个账号。<br>
若您无法访问，请检查服务器防火墙/安全组是否放行了 8888 端口。</p>
<p>注册账号后，请在右上角下拉菜单找到个人信息页，在个人信息页用户名后找到用户的 UID。<br>
在终端以 root 用户运行以下命令将用户设置为管理员：</p>
<CodeGroup>
<CodeGroupItem title="常规部署" active>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user setSuperAdmin UID</span></div></code></div></pre>
<div></div></div></CodeGroupItem>
<CodeGroupItem title="开发者模式">
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #616E88"># 请在 Hydro 的安装文件夹内运行该命令</span></div><div class='line'><span style="color: #D8DEE9FF">npx hydrooj cli user setSuperAdmin UID</span></div></code></div></pre>
<div></div></div></CodeGroupItem>
</CodeGroup>
<p>之后刷新页面，您应当能在导航栏看到控制面板入口。<br>
进入控制面板，右侧进入系统设置，填写如下内容：</p>
<ul>
<li>Server Name: 您的 OJ 的名称。</li>
<li>Server BaseURL: 网站完整的 URL，需要以 <code>/</code> 结尾。（重要，务必正确填写）</li>
<li>Server Port: Hydro 监听的端口。</li>
<li>IP Header: 若使用反向代理（含 Cloudflare 等 CDN 服务），请设置为其 IP Header（通常为 <code>x-forwarded-for</code> 或 <code>x-real-ip</code>，小写）。在不使用反向代理的情况下请勿配置该项，否则用户将可以伪造 IP 。</li>
<li>Default display language: 网站默认语言。</li>
</ul>
<div><p>Tips</p>
<p>建议您完整浏览所有设置项并按需配置。（不知道是啥的别改，出问题了自行解决）</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>端口映射</title>
      <link>https://hydro.js.org/docs/install/port-forwarding/</link>
      <guid>https://hydro.js.org/docs/install/port-forwarding/</guid>
      <source url="https://hydro.js.org/rss.xml">端口映射</source>
      <pubDate>Mon, 24 May 2021 16:14:19 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="端口映射"> 端口映射</h1>
<div><p>Tips</p>
<p>如果您希望让外网访问 Hydro，但是服务器没有外网ip，那么您可能需要这篇教程。<br>
本文将引导您将内外的 Hydro 对外网开放。您可以选择以下方案中的一种。</p>
</div>
<h2 id="ngrok"> ngrok</h2>
<p>ngrok 是一款操作简单的软件，可以把内网的 web 服务映射到外网。</p>
<p>大部分的 ngrok 服务是免费的。例如：<a href="https://www.ngrok.cc/" target="_blank" rel="noopener noreferrer">ngrok.cc</a></p>
<div><p>Tips</p>
<p>ngrok 的缺点：</p>
<ul>
<li>速度比较慢</li>
<li>数据并不保密，ngrok 服务提供者有能力监听 OJ 的通讯。</li>
</ul>
</div>
<p>虽然有这几个缺点，ngrok 仍然不失为一个好的选择。具体的配置，请参见 <a href="https://www.ngrok.cc/" target="_blank" rel="noopener noreferrer">ngrok.cc</a> 网站。</p>
<h2 id="ssh-转发"> ssh 转发</h2>
<p>这个方案需要您有一台 VPS，且 VPS 需要拥有外网 IP。</p>
<p>首先，您需要在本地机器通过 <code>ssh-keygen</code> 来生成一个您的密钥：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>bash</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">ssh-keygen -t rsa</span></div></code></div></pre>
<div></div></div><p>一直按 <code>enter</code> 键，然后您将会在 <code>~/.ssh/id_rsa.pub</code> 取得您的公钥。<br>
<img src="./pictures/pict1.png" alt="生成公钥" loading="lazy"></p>
<p>然后登录您的VPS，把上面的公钥扔进<code>~/.ssh/authorized_keys</code>，如下图所示：<br>
<img src="./pictures/pict2.png" alt="VPS" loading="lazy"></p>
<p>现在，您在本地机器上使用如下命令，应该可以免密码登录VPS：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">ssh </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">VPS_user</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">@</span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">VPS_ip</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">  </span></div></code></div></pre>
<div></div></div><p>如果不能登录，您可能对上面过程的理解存在偏差。<br>
接下来，在本地机器上安装 autossh，它是稳定的 ssh 连接工具：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">apt install autossh</span></div></code></div></pre>
<div></div></div><p>最后运行下面的指令，将本地的 80 端口映射到 VPS 的 80 端口：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">autossh -M 5698 -NfR </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">VPS的ip</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">:80:</span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">本地机器的ip</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">:80 </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">VPS用户名</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">@</span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">VPS的ip</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF">  </span></div><div class='line'></div><div class='line'><span style="color: #616E88"># 例如：</span></div><div class='line'><span style="color: #616E88"># autossh -M 5698 -NfR 23.23.23.23:80:127.0.0.1:80 blue@23.23.23.23</span></div><div class='line'><span style="color: #616E88"># 5698 是监听端口，用于测试 ssh 连接是否稳定。如果您运行了多个 autossh，请保证它们的监听端口不同。</span></div></code></div></pre>
<div></div></div><p>访问 VPS 的 IP，您应该可以看到 Hydro 了。<br>
如果您有域名，请添加一条 A 记录，指向 VPS 的 IP，然后就能用域名访问了。</p>
]]></content:encoded>
    </item>
    <item>
      <title>反向代理 / SSL 配置</title>
      <link>https://hydro.js.org/docs/install/proxy/</link>
      <guid>https://hydro.js.org/docs/install/proxy/</guid>
      <source url="https://hydro.js.org/rss.xml">反向代理 / SSL 配置</source>
      <pubDate>Sun, 15 Aug 2021 12:55:13 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="反向代理-ssl-配置"> 反向代理 / SSL 配置</h1>
<div><p>Note</p>
<p>若使用反向代理，请注意将 Hydro 设置的 X-Host header 配置正确（参照下方样例配置）。<br>
X-Real-Host 配置错误会导致用户无法登录等问题。(CsrfTokenError)<br>
X-Real-Ip 配置错误会导致无法记录用户IP。</p>
<p>使用 <code>hydrooj cli system set server.xhost x-real-host</code> 指定自定义 Host header。</p>
</div>
<p>Hydro 可以直接监听 80/443 端口以提供服务，但是当您的服务器上需要同时运行多个 Web 服务时可能会发生端口冲突。<br>
此时可以使用 Nginx, HaProxy, Caddy 等工具进行反向代理，<a href="https://github.com/hydro-dev/Hydro/tree/master/examples/reverse_proxy" target="_blank" rel="noopener noreferrer">此处</a> 提供了一些配置样例。</p>
<p>Hydro 推荐您使用 <a href="https://caddyserver.com/" target="_blank" rel="noopener noreferrer">Caddy</a>。以下为样例 Caddyfile。
提示：如果您的服务器位于国内，则需要进行备案后才能使用 80 和 443 端口。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div class='code-container'><code><div class='line'><span style="color: undefined">hydro.ac {
  reverse_proxy http://localhost:8888 {
    header_up x-real-ip {remote_host}
    header_up x-real-host hydro.ac
  }
}</span></div></code></div></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><p>Note</p>
<p>若您使用 Nginx，请注意配置 WebSocket 协议的反向代理。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>存储</title>
      <link>https://hydro.js.org/docs/install/s3/</link>
      <guid>https://hydro.js.org/docs/install/s3/</guid>
      <source url="https://hydro.js.org/rss.xml">存储</source>
      <pubDate>Wed, 15 Sep 2021 13:55:21 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="存储"> 存储</h1>
<div><p>Tips</p>
<p>使用一键安装脚本部署的 Hydro 一般已自动完成存储配置。<br>
运行多次一键安装脚本的用户需注意检查存储配置。</p>
</div>
<p>请根据你使用的存储端类型阅读对应教程。（同时欢迎使用其他存储类型的用户向我们提供详细的存储教程）</p>
<div><p>Note</p>
<p>不使用 MinIO 作为存储端的用户请删除 <code>~/.hydro/env</code>。</p>
</div>
<h2 id="minio"> MinIO</h2>
<div><p>Tips</p>
<p>使用一键安装脚本的用户可以通过可以运行下面的指令得到 <code>MINIO_ACCESS_KEY</code> 和 <code>MINIO_SECRET_KEY</code>：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">pm2 info minio </span><span style="color: #81A1C1">|</span><span style="color: #D8DEE9FF"> grep </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">script args</span><span style="color: #ECEFF4">"</span></div></code></div></pre>
<div></div></div></div>
<p>进入 控制面板&gt;系统设置&gt;存储桶设置。</p>
<ul>
<li><code>file.endPoint</code>： <code>http://127.0.0.1:9000</code>（即 MinIO 启动时显示的 endPoint）</li>
<li><code>file.bucket</code>： <code>hydro</code>（MinIO 内部存储桶名称）</li>
<li><code>file.region</code>： <code>us-east-1</code>（随便填）</li>
<li><code>file.pathStyle</code>： true</li>
<li><code>file.endPointForUser</code>： <code>/fs/</code></li>
<li><code>file.endPointForJudge</code>： <code>/fs/</code></li>
</ul>
<p>打开 <code>~/.hydro/env</code>，将文件改为：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div class='code-container'><code><div class='line'><span style="color: undefined">MINIO_ACCESS_KEY=这里填写 MINIO_ACCESS_KEY
MINIO_SECRET_KEY=这里填写 MINIO_SECRET_KEY</span></div></code></div></pre>
<div><span>1</span><br></div></div><h2 id="腾讯云cos"> 腾讯云COS</h2>
<p>进入 控制面板&gt;系统设置&gt;存储桶设置。</p>
<ul>
<li><code>file.endPoint</code>： <code>http://cos.&lt;存储桶地域&gt;.myqcloud.com</code> （或是 https）</li>
<li><code>file.accessKey</code>： 您的腾讯云 API 密钥的 SecretId</li>
<li><code>file.secretKey</code>： 您的腾讯云 API 密钥的 SecretKey</li>
<li><code>file.bucket</code>： &lt;存储桶名称&gt;</li>
<li><code>file.region</code>： Auto</li>
<li><code>file.pathStyle</code>： true</li>
<li><code>file.endPointForUser</code>： 给用户使用的 EndPoint，若填 <code>/fs/</code> 则表示由服务器转发</li>
<li><code>file.endPointForJudge</code>： 给 judge 使用的 EndPoint，若填 <code>/fs/</code> 则表示由服务器转发</li>
</ul>
<h2 id="阿里云oss"> 阿里云OSS</h2>
<p>// TODO &amp; PRs Welcome</p>
]]></content:encoded>
    </item>
    <item>
      <title>SMTP</title>
      <link>https://hydro.js.org/docs/install/smtp/</link>
      <guid>https://hydro.js.org/docs/install/smtp/</guid>
      <source url="https://hydro.js.org/rss.xml">SMTP</source>
      <pubDate>Thu, 16 Sep 2021 09:52:14 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="smtp"> SMTP</h1>
<p>以 QQ 邮箱为例。</p>
<ul>
<li>SMTP_USER: 12345678@qq.com</li>
<li>SMTP_PASS: 提供的 SMTP 密码</li>
<li>SMTP_HOST: smtp.qq.com</li>
<li>SMTP_PORT: 465/587 （请参照邮件服务商说明）</li>
<li>SMTP_SECURE: 是否使用加密 TLS 连接（请参照邮件服务商说明）</li>
<li>SMTP_FROM: 发送签名（提示：若不清楚请填写邮件地址，填错会导致邮件无法发送）</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>使用内容分发网络</title>
      <link>https://hydro.js.org/docs/system/cdn/</link>
      <guid>https://hydro.js.org/docs/system/cdn/</guid>
      <source url="https://hydro.js.org/rss.xml">使用内容分发网络</source>
      <pubDate>Sat, 14 Aug 2021 02:30:42 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="使用内容分发网络"> 使用内容分发网络</h1>
<h2 id="资源-cdn"> 资源 CDN</h2>
<p>在控制面板中将 <code>server.cdn</code> 设置项修改为 CDN 域名。（如 <code>https://cdn.hydro.ac/</code>，以 <code>/</code> 结尾）。</p>
<div><p>Tips</p>
<p>您可以使用 <code>https://cdn.jsdelivr.net/npm/@hydrooj/ui-default@[version]/public/</code> 作为 CDN 地址。<br>
（请替换 <code>[version]</code> 为您本地安装的 <code>ui-default</code> 插件版本）<br>
但由于在中国大陆访问 jsdelivr 的速度较慢（甚至在部分地区不可用），该 CDN 可能会影响用户体验。</p>
</div>
<h2 id="全站-cdn"> 全站 CDN</h2>
<p>如果您预算充足，可以使用全站 CDN。</p>
<p>缓存设置可以参考以下设置</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>内容</th>
<th>缓存行为</th>
</tr>
</thead>
<tbody>
<tr>
<td>全部文件</td>
<td>全部文件</td>
<td>遵循源站</td>
</tr>
<tr>
<td>文件后缀</td>
<td>jpg,js,html,png,css</td>
<td>缓存一天</td>
</tr>
</tbody>
</table>
<p>同时设置添加回源HTTP请求头</p>
<table>
<thead>
<tr>
<th>头部参数</th>
<th>头部取值</th>
</tr>
</thead>
<tbody>
<tr>
<td>X-Forward-For</td>
<td>参考所使用服务商CDN文档来设置用户来源IP</td>
</tr>
</tbody>
</table>
<p>且您应当修改系统设置中的 <code>server.xff</code> 值为 <code>X-Forwarded-For</code>，该设置是为了能够让系统正确获取到用户的IP地址。</p>
]]></content:encoded>
    </item>
    <item>
      <title>常见问题</title>
      <link>https://hydro.js.org/docs/system/FAQ/</link>
      <guid>https://hydro.js.org/docs/system/FAQ/</guid>
      <source url="https://hydro.js.org/rss.xml">常见问题</source>
      <pubDate>Sat, 05 Jun 2021 07:21:16 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="常见问题"> 常见问题</h1>
<p>已移动至 <a href="/FAQ/">此处</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Hydro Cli</title>
      <link>https://hydro.js.org/docs/system/cli/</link>
      <guid>https://hydro.js.org/docs/system/cli/</guid>
      <source url="https://hydro.js.org/rss.xml">Hydro Cli</source>
      <pubDate>Thu, 23 Sep 2021 02:42:04 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="hydro-cli"> Hydro Cli</h1>
<div><p>Tips</p>
<p>在使用 cli 之前，请完成数据库配置。<br>
指令中使用 <code>&lt;&gt;</code> 括起来的参数必须给出，用 <code>[]</code> 括起来的参数可以给出，若不给出则按照默认设置。<br>
<strong>用户请根据自己的情况替换掉用 <code>&lt;&gt;</code> 或是 <code>[]</code> 包括起来的部分（括号也应替换）</strong></p>
</div>
<p>cli 可以帮助用户在控制台下快捷地进行一些操作。<br>
这些命令需要以在终端以 root 用户执行（安装时执行命令的位置）。<br>
下面给出了一些常用的例子。</p>
<h2 id="创建用户"> 创建用户</h2>
<div><p>Tips</p>
<p>很少使用。建议通过 控制面板&gt;导入用户 功能代替</p>
</div>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user create </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">mail</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">username</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">password</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">uid</span><span style="color: #81A1C1">&gt;</span></div><div class='line'><span style="color: #616E88"># 该用户的邮箱、用户名和密码</span></div><div class='line'></div><div class='line'><span style="color: #616E88"># 如创建邮箱为 hydro@hydro.local，用户名为 Hydro，密码为 hydrohydro ，UID 为 2 的用户：</span></div><div class='line'><span style="color: #616E88"># 请确保 UID 为不小于 2 的正整数且未被占用，邮箱和用户名均不重复。</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user create hydro@hydro.local Hydro hydrohydro 2</span></div></code></div></pre>
<div></div></div><p>若一切正常，运行该指令后您会从命令行窗口中看到该用户 uid。</p>
<h2 id="设置全站管理员"> 设置全站管理员</h2>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user setSuperAdmin </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">uid</span><span style="color: #81A1C1">&gt;</span></div><div class='line'></div><div class='line'><span style="color: #616E88"># 如设置 uid 为 2 的用户为管理员：</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user setSuperAdmin 2</span></div></code></div></pre>
<div></div></div><h2 id="设置用户权限"> 设置用户权限</h2>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user setPriv </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">uid</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">priv</span><span style="color: #81A1C1">&gt;</span></div></code></div></pre>
<div></div></div><p>关于参数 <code>[priv]</code> ，可阅读 <a href="/dev/PERM_PRIV/">此处</a>。</p>
<h2 id="更改用户密码"> 更改用户密码</h2>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user setPassword </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">uid</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">password</span><span style="color: #81A1C1">&gt;</span></div><div class='line'></div><div class='line'><span style="color: #616E88"># 如将 uid 为 1 的用户的密码改为 hydrohydro：</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user setPassword 1 hydrohydro</span></div></code></div></pre>
<div></div></div><h2 id="创建评测账号"> 创建评测账号</h2>
<p>先 。</p>
<p>您需要留意运行此指令返回的数字，表示该用户的 <code>uid</code>，需要填入下面的指令中，然后给予该账号评测权限。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user setJudge </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">uid</span><span style="color: #81A1C1">&gt;</span></div></code></div></pre>
<div></div></div><p>完成后将配置的用户名及密码写入评测机配置文件，评测机即可连接到网页端。</p>
<h2 id="黑名单相关"> 黑名单相关</h2>
<p>用户封禁：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user setPriv </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">uid</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> 0</span></div></code></div></pre>
<div></div></div><p>IP/邮箱域名封禁：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #616E88"># key 格式为 ip::xxx.xxx.xxx.xxx （封禁 IP 访问） 或是 mail::xxx.com （禁止 xxx.com 的邮箱注册）</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj cli blacklist add </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">key</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #D8DEE9FF">duration</span><span style="color: #ECEFF4">]</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 将 &lt;key&gt; 拉入黑名单，时长为 [duration] （以月为单位的整数，默认为 12，若 duration=0 则永久封禁）</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj cli blacklist get </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">key</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 获取黑名单中有关 &lt;key&gt; 的信息</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj cli blacklist del </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">key</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 将 &lt;key&gt; 移出黑名单</span></div></code></div></pre>
<div></div></div><h2 id="命令列表"> 命令列表</h2>
<p>所有于 <a href="https://github.com/hydro-dev/Hydro/tree/master/packages/hydrooj/src/model" target="_blank" rel="noopener noreferrer">此文件夹</a> 下的函数均可用 cli 调用。</p>
<p>这里并没有列出所有可以运行的指令，因为其中很多功能我们更推荐通过 Web 访问。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user create </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">mail</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">uname</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">password</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #D8DEE9FF">uid</span><span style="color: #ECEFF4">]</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #D8DEE9FF">regip</span><span style="color: #ECEFF4">]</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #D8DEE9FF">priv</span><span style="color: #ECEFF4">]</span></div><div class='line'><span style="color: #616E88"># 创建邮箱为 &lt;mail&gt;，用户名为 &lt;uname&gt;，密码为 &lt;password&gt;，ID 为 [uid]，注册 ip 为 [regip]，权限为 [priv] 的用户</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user setPriv </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">uid</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">priv</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 将 ID 为 &lt;uid&gt; 的用户的权限设为 &lt;priv&gt;</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user setPassword </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">uid</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">password</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 将 ID 为 &lt;uid&gt; 的用户的密码设置为 &lt;password&gt;</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user setEmail </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">uid</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">mail</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 将 ID 为 &lt;uid&gt; 的用户的邮箱设置为 &lt;mail&gt;</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj cli user setSuperAdmin </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">uid</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 将 ID 为 &lt;uid&gt; 的用户设为全站管理员</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj cli system </span><span style="color: #88C0D0">set</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">key</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">value</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 修改系统设置 &lt;key&gt; 值为 &lt;value&gt;</span></div></code></div></pre>
<div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>数据库备份和恢复</title>
      <link>https://hydro.js.org/docs/system/database/</link>
      <guid>https://hydro.js.org/docs/system/database/</guid>
      <source url="https://hydro.js.org/rss.xml">数据库备份和恢复</source>
      <pubDate>Sat, 14 Aug 2021 02:30:42 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="数据库备份和恢复"> 数据库备份和恢复</h1>
<h2 id="备份"> 备份</h2>
<p>为了保证数据安全，请定期备份。</p>
<p>若您使用自动脚本安装，可使用 <code>hydrooj backup</code> 快捷备份数据。</p>
<p>可使用 MongoDB 自带的 <a href="https://docs.mongodb.com/database-tools/mongodump/" target="_blank" rel="noopener noreferrer">mongodump</a> 进行数据库备份。并将 <code>/data/file</code> 文件夹备份即可。</p>
<p>对于数据库，请<strong>请不要在数据库运行时直接拷贝数据库文件夹</strong>。请每次备份后检查生成的备份文件的大小和内容，确保备份成功。<br>
请不要把备份数据和 Hydro 系统放在同一台机器上，这样数据丢失的风险仍然较高。</p>
<h2 id="恢复备份"> 恢复备份</h2>
<p>若您使用自动脚本安装，可使用 <code>hydrooj restore &lt;备份文件路径&gt;</code> 恢复之前备份的数据。</p>
<p>使用 MongoDB 自带的 <a href="https://docs.mongodb.com/database-tools/mongorestore/" target="_blank" rel="noopener noreferrer">mongorestore</a> 导入备份的数据库文件，并还原 <code>/data/file</code> 目录文件。<br>
如果只是想不同机器之间迁移部署，只需要在<strong>停止 Hydro 和 MongoDB MinIO 服务后</strong>将相关文件夹（通常为 <code>/data/db</code> 与 <code>/data/file</code> 与 <code>/root/.hydro/config.json</code> ）复制即可。</p>
]]></content:encoded>
    </item>
    <item>
      <title>前端修改</title>
      <link>https://hydro.js.org/docs/system/frontend-modify/</link>
      <guid>https://hydro.js.org/docs/system/frontend-modify/</guid>
      <source url="https://hydro.js.org/rss.xml">前端修改</source>
      <pubDate>Sat, 31 Jul 2021 05:30:41 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="前端修改"> 前端修改</h1>
<p>此指南将教您修改前端文件。</p>
<p>如果您正在使用开发者模式，请直接修改 <code>packages/ui-default/templates</code> 下的文件。</p>
<p>如果您使用安装脚本部署：</p>
<p>请先使用 <code>hydrooj addon create</code> 创建一个本地插件（如果之前没有做过的话）。</p>
<h2 id="修改页面翻译或是添加新语言"> 修改页面翻译或是添加新语言：</h2>
<ul>
<li>修改翻译：在 <a href="https://github.com/hydro-dev/Hydro/blob/master/packages/ui-default/locales/zh.yaml" target="_blank" rel="noopener noreferrer">zh.yaml</a> 内搜索您需要修改的翻译内容，并将 <strong>其所在行而非整个文件</strong> 修改后添加至 <code>~/addon/locales/zh.yaml</code> 。</li>
<li>添加语言：可参照 <a href="https://github.com/hydro-dev/Hydro/blob/master/packages/ui-default/locales/zh.yaml" target="_blank" rel="noopener noreferrer">zh.yaml</a> 格式创建一个新文件。欢迎社区参与多国化翻译工作。</li>
</ul>
<h2 id="修改页面模板"> 修改页面模板：</h2>
<p>通常的，在您访问的 url 前加上 <code>view-source:</code>（如 <code>view-source:https://hydro.ac</code> 即可查看页面源代码，在第二行的 <code>&lt;html data-page=&quot;xxx&quot;&gt;</code> 中 <code>data-page</code> 值即为页面名（首页例外，为 <code>main.html</code>）。
在 <a href="https://github.com/hydro-dev/Hydro/tree/master/packages/ui-default/templates" target="_blank" rel="noopener noreferrer">默认 templates</a> 中找到对应文件，将<strong>文件的全部内容</strong> 复制到 <code>~/addon/templates/</code> 文件夹下后进行修改即可。</p>
<p>特别的，创建题目时的默认模板位于 <code>partials/problem_default.md</code>，创建训练计划时的默认模板位于 <code>partials/training_default.json</code>，修改方式同上。</p>
<p>以上所有更改均会在重启 Hydro 后生效。</p>
]]></content:encoded>
    </item>
    <item>
      <title>导入用户</title>
      <link>https://hydro.js.org/docs/system/import-user/</link>
      <guid>https://hydro.js.org/docs/system/import-user/</guid>
      <source url="https://hydro.js.org/rss.xml">导入用户</source>
      <pubDate>Sat, 14 Aug 2021 02:30:42 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="导入用户"> 导入用户</h1>
<p>目前仅支持的 csv 格式导入, csv 文件既可以用文本编辑器创建，也可以用 Excel 等软件来辅助创建。</p>
<p>每行三列或四列，分别为: 邮箱，用户名，密码，显示名。（显示名为可选）<br>
请使用 UTF-8 编码，否则中文可能会乱码。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div class='code-container'><code>foo@undefined.moe,user1,password1
bar@undefined.moe,user2,password2,temp
test@undefined.moe,user3,passwd3</code></div></pre>
<div><span>1</span><br><span>2</span><br></div></div><p>这将创建三个用户：</p>
<ul>
<li><code>user1</code> 密码为 <code>password1</code> , 邮箱 <code>foo@undefined.moe</code>；</li>
<li><code>user2</code> 密码为 <code>password2</code> ，邮箱 <code>bar@undefined.moe</code>，显示名为 <code>temp</code>；</li>
<li><code>user3</code> 密码为 <code>passwd3</code>，邮箱 <code>test@undefined.moe</code>；</li>
</ul>
<div><p>Note</p>
<p>用户创建后无法删除，请谨慎操作</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>维护</title>
      <link>https://hydro.js.org/docs/system/maintain/</link>
      <guid>https://hydro.js.org/docs/system/maintain/</guid>
      <source url="https://hydro.js.org/rss.xml">维护</source>
      <pubDate>Thu, 16 Sep 2021 09:52:14 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="维护"> 维护</h1>
<h2 id="pm2"> PM2</h2>
<p>使用一键安装脚本安装的 Hydro 使用 PM2 对进程进行管理。</p>
<h3 id="进程名称"> 进程名称</h3>
<p>可以通过下面的指令查看当前 PM2 正在管理的所有进程。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">pm2 ls</span></div></code></div></pre>
<div></div></div><p>一键安装脚本默认会创建下面几个进程：</p>
<ul>
<li><code>hydrooj</code>： Hydro 主进程</li>
<li><code>hydro-sandbox</code>： Hydro 评测沙箱</li>
<li><code>mongodb</code>： MongoDB 数据库</li>
<li><code>minio</code>：用户文件存储（测试数据等）</li>
</ul>
<p>后文的指令中将用 <code>&lt;name&gt;</code> 替代此处的进程名称，用 <code>&lt;id&gt;</code> 替代进程 ID（进程 ID 可通过 <code>pm2 ls</code> 查看）。（尖括号同样需要替换）</p>
<h3 id="pm2-基本指令"> PM2 基本指令</h3>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">pm2 start </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">name</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 启动进程</span></div><div class='line'><span style="color: #D8DEE9FF">pm2 stop </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">name</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 关闭进程</span></div><div class='line'><span style="color: #D8DEE9FF">pm2 restart </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">name</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 重启进程</span></div><div class='line'><span style="color: #D8DEE9FF">pm2 del </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">name</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 删除进程</span></div><div class='line'><span style="color: #D8DEE9FF">pm2 log </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">name</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 查看进程日志</span></div><div class='line'><span style="color: #D8DEE9FF">pm2 log </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">name</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> --lines=100 </span><span style="color: #616E88"># 查看该进程的后 100 行日志</span></div><div class='line'><span style="color: #D8DEE9FF">pm2 start </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">&lt;command&gt;</span><span style="color: #ECEFF4">"</span><span style="color: #D8DEE9FF"> --name </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">name</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 创建名为 &lt;name&gt; 的进程，进程执行内容为 &lt;command&gt;</span></div><div class='line'><span style="color: #D8DEE9FF">pm2 attach </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">id</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 与进程交互</span></div><div class='line'><span style="color: #D8DEE9FF">pm2 save </span><span style="color: #616E88"># 保存对 PM2 进行的修改（在添加、修改、删除进程后需要执行该指令）</span></div></code></div></pre>
<div></div></div><p>在部分环境（常见于 lxc 容器或是精简版系统）下，服务器重启后 Hydro 可能不能正常自启动，这时请使用 <code>pm2 resurrect</code> 手动载入进程列表。</p>
<p>Hydro 主进程同样支持多进程启动，但在中低端服务器（不超过4核）中没有必要使用多进程启动 Hydro，会降低性能且成倍提高内存占用。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">pm2 start hydrooj -i </span><span style="color: #81A1C1">&lt;</span><span style="color: #D8DEE9FF">n</span><span style="color: #81A1C1">&gt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 以 n 进程启动 Hydro 主进程</span></div></code></div></pre>
<div></div></div><h2 id="更新"> 更新</h2>
<p>Hydro 系统会不定期发布更新，可以使用下面的命令获取更新。</p>
<p>无特殊情况请 <strong>不要更新PM2</strong> ！此操作可能导致进程列表丢失！</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">yarn global upgrade-interactive --latest </span><span style="color: #616E88"># 在交互式界面中选择想要更新的组件</span></div><div class='line'><span style="color: #D8DEE9FF">pm2 restart hydrooj </span><span style="color: #616E88"># 更新完后需重启 hydrooj</span></div></code></div></pre>
<div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>用户文档</title>
      <link>https://hydro.js.org/docs/user/</link>
      <guid>https://hydro.js.org/docs/user/</guid>
      <source url="https://hydro.js.org/rss.xml">用户文档</source>
      <pubDate>Sat, 08 May 2021 17:02:49 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="用户文档"> 用户文档</h1>
<h2 id="题目难度"> 题目难度</h2>
<p>Hydro 中题目的难度，根据递交数、通过率以及每个递交的递交时间和评测结果，通过算法计算得出。</p>
<ol>
<li>一般地，难度的数值越大，该题目越难。</li>
<li>新题目的难度可能不准确；在题目获得大量递交之后，难度才会变得较为准确。</li>
<li>越早递交评测的用户代码的评测结果对题目难度影响越大。</li>
<li>题目的难度由算法计算得出，有可能出现不准确的结果。</li>
</ol>
<h2 id="参与比赛"> 参与比赛</h2>
<p>您可以在比赛的详细界面内点击“参与比赛”按钮进行参与。
比赛过程中“成绩表”会根据比赛规则显示排名。
在比赛截止之后，您仍然可以订正其中的题目，但“成绩表”将停止更新。</p>
<h2 id="发布讨论"> 发布讨论</h2>
<p>若您想发布一个讨论，<strong>请先进入一个讨论节点</strong>，之后点击“创建一个讨论”按钮并填写：</p>
<ul>
<li>标题；</li>
<li>内容；</li>
<li>是否高亮：若选择后，该贴的左边将有醒目的红色线条（需要“高亮讨论”权限）；</li>
<li>Pin：该讨论是否置顶（需要“置顶讨论”权限）。</li>
</ul>
<p>之后点击“创建”按钮进行发布。</p>
<h2 id="认领作业"> 认领作业</h2>
<p>您可以在作业的详情页面中，点击“认领作业”。<br>
在作业开始之前，您无法查看作业中的题目。<br>
在作业持续时间内，您与他人的做题情况会被实时统计在“成绩表”内。<br>
在作业进入延期阶段后，您仍然可以提交题目，但成绩表内的分数将根据延期扣分规则按百分比折算。<br>
在作业截止之后，您仍然可以订正其中的题目，但“成绩表”将停止更新。</p>
]]></content:encoded>
    </item>
    <item>
      <title>复制题目</title>
      <link>https://hydro.js.org/docs/user/copy-problem/</link>
      <guid>https://hydro.js.org/docs/user/copy-problem/</guid>
      <source url="https://hydro.js.org/rss.xml">复制题目</source>
      <pubDate>Fri, 05 Nov 2021 09:18:22 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="复制题目"> 复制题目</h1>
<p>复制题目可以帮助用户将任何有权提交的题目复制到有权创建题目的域中以在比赛/作业/训练计划中使用这些题目。</p>
<h2 id="操作流程"> 操作流程</h2>
<ol>
<li>进入需要复制的题目页面或是题目列表页面。</li>
<li>点击右侧栏底部的“复制”按钮或是多选题目后点击右侧复制题目按钮。</li>
<li>在弹出的窗口中输入需要复制到的域的 ID。</li>
<li>点击“确定”后将自动跳转到复制后的题目连接。</li>
</ol>
<h2 id="限制"> <strong>限制</strong></h2>
<ul>
<li>不允许查看/修改复制后的题目的测试数据。</li>
<li>不能复制一个复制来的题目。</li>
<li>部分题目可能不允许复制。这遵循 域设置&gt;编辑域资料 中的管理员设定。</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>域</title>
      <link>https://hydro.js.org/docs/user/domain/</link>
      <guid>https://hydro.js.org/docs/user/domain/</guid>
      <source url="https://hydro.js.org/rss.xml">域</source>
      <pubDate>Fri, 13 Aug 2021 04:33:40 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="域"> 域</h1>
<h2 id="简介"> 简介</h2>
<p>域，可以理解为 OJ 中的 OJ。<br>
用户有权限为自己创建多个域。（取决于用户组设定，需要 PRIV_CREATE_DOMAIN 权限）。
同一 Hydro 实例上的多个域间完全独立，仅用户信息相通（您在一个 Hydro 实例上注册账户后，在该实例的所有域中均有效）。</p>
<h2 id="创建域"> 创建域</h2>
<p>登录账号后，在“我的”选项卡中找到“我的域”，并点击“创建域”，填入以下信息：</p>
<ul>
<li>ID： 每个域有一个唯一的 ID，将会在域 URL 中体现。<strong>创建后无法修改。</strong></li>
<li>名称： 域的名字，创建后可以更改。</li>
<li>公告： 域主页上显示的公告，创建后可以更改。</li>
<li>avatar： 域头像，与用户头像同理，可以使用 <code>gravatar:email</code> 或 <code>qq:id</code> 或 <code>github:name</code> 或 <code>url:link</code> 的格式添加。将会在“我的域”界面内显示。</li>
</ul>
<p>创建域后，您将在此域中拥有管理员权限，可以在域内进行添加题目/创建比赛等操作。</p>
<h2 id="初始化讨论节点"> 初始化讨论节点</h2>
<p>您可以在“管理域”选项卡中点击“初始化讨论节点”按钮初始化讨论节点。</p>
<h2 id="访问控制"> 访问控制</h2>
<p><strong>未登录用户将默认使用 <code>guest</code> 权限，登录用户将默认使用 <code>default</code> 权限。</strong>（所以将登陆用户设为 <code>default</code> 权限后并不会显示在“管理用户”页内，这也表示所有用户默认不会出现在管理列表中）<br>
所以将一个用户的权限设为 <code>default</code> 和将用户移出该域是等价的。</p>
<p>对于不在列表中的用户，点击右上角“添加用户”，在左侧选中用户，右侧选择权限组，再点击“确定”即可。</p>
<h2 id="创建比赛"> 创建比赛</h2>
<p>若您想要创建比赛，您可以在“比赛”选项卡中点击“创建一个比赛”按钮，并填写：</p>
<ul>
<li>规则；</li>
<li>标题；</li>
<li>开始日期，时间；</li>
<li>持续时间；</li>
<li>题目： 此比赛包含的题目的 <strong>ID</strong>，若有多个则用逗号分隔；</li>
<li>内容： 该比赛的详细介绍；</li>
<li>是否 Rated： 该比赛是否会改变参加选手的 RP。</li>
</ul>
<p>设置完后可点击“创建”按钮创建比赛。</p>
<p>在比赛中可以进入 <code>/contest/&lt;id&gt;/broadcast</code>（即比赛公告页网址后面加一个 <code>/broadcast</code>） 对所有参赛选手发布比赛公告，所有参与比赛的选手都会收到私信提醒，且他们已打开的比赛页面将弹出公告弹窗。</p>
<div><p>Tips</p>
<p>若因为删除比赛内题目导致比赛无法打开，可以通过 <code>/contest/&lt;id&gt;/edit</code>（即比赛页面后加上 <code>/edit</code>）直接访问比赛编辑页并修正配置文件。</p>
</div>
<h2 id="创建作业"> 创建作业</h2>
<p>若您想要创建作业，您可以在“作业”选项卡中点击“创建作业”按钮，并填写：</p>
<ul>
<li>标题；</li>
<li>开始日期、时间；</li>
<li>结束日期、时间；</li>
<li>最长延期；</li>
<li>延期递交扣分规则；</li>
<li>题目：此作业包含的题目的 <strong>ID</strong>，若有多个则用逗号分隔；</li>
<li>内容：该作业的详细介绍。</li>
</ul>
<p>之后点击“创建”按钮进行创建。</p>
<div><p>Tips</p>
<p>若因为删除作业内题目导致作业无法打开，可以通过 <code>/homework/&lt;id&gt;/edit</code>（即作业页面后加上 <code>/edit</code>）直接访问作业编辑页并修正配置文件。</p>
</div>
<h2 id="创建训练"> 创建训练</h2>
<p>若您想要创建训练，您可以在“训练” 项卡中点击“新建训练计划”，填写以下信息：</p>
<ul>
<li>标题：该训练的标题；</li>
<li>简介：该训练的简介，会与标题同时显示在列表页面中；</li>
<li>说明：该训练的详细信息；</li>
<li>计划：该训练的具体题目及计划信息，其格式如下：</li>
</ul>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div class='code-container'><code><div class='line'><span style="color: undefined">[
  {章节详细信息},
  {章节详细信息},
  ...
  {章节详细信息}
]</span></div></code></div></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>其中，“章节详细信息”的包含以下部分：</p>
<ul>
<li><code>_id</code>：章节数字编号；</li>
<li><code>title</code>：章节标题；</li>
<li><code>requireNids</code>：训练此章节之前需要完成的章节数字编号，若无要求则留空，若有多个则使用逗号分隔；</li>
<li><code>pids</code>：此章节中包含的题目的 <strong>ID</strong>，若有多个则使用逗号分隔。</li>
</ul>
<p><strong>举例</strong>：若要在训练中创建三个章节，章节中分别有 <strong>ID</strong> 为 1，2，3 的题目。其中章节一、二无前置条件，章节三需要同时完成章节一、二后才能进行，则格式如下：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>json</div><div class='code-container'><code><div class='line'><span style="color: #ECEFF4">[</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">_id</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">title</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">入门</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">requireNids</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[],</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">pids</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">]</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">},</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">_id</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">title</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">精通</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">requireNids</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[],</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">pids</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">]</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">},</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">_id</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">3</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">title</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">大师</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">requireNids</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">],</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">pids</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">3</span><span style="color: #ECEFF4">]</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">}</span></div><div class='line'><span style="color: #ECEFF4">]</span></div></code></div></pre>
<div></div></div><div><p>Tips</p>
<p>若因为删除训练计划内题目导致训练计划无法打开，可以通过 <code>/training/&lt;id&gt;/edit</code>（即训练计划页面后加上 <code>/edit</code>）直接访问训练计划编辑页并修正配置文件。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Hydro常见题型的制做心得</title>
      <link>https://hydro.js.org/docs/user/problem-create/</link>
      <guid>https://hydro.js.org/docs/user/problem-create/</guid>
      <source url="https://hydro.js.org/rss.xml">Hydro常见题型的制做心得</source>
      <pubDate>Wed, 16 Mar 2022 06:47:16 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="hydro常见题型的制做心得"> Hydro常见题型的制做心得</h1>
<p>作者: laomai<br>
qq: 29985091<br>
网址: http://82.157.98.222:8888/<br>
日期: 2022/03/16</p>
<p>本文为作者使用hydro时的实验记录，希望对大家有帮助.包括如下内容</p>
<p>零. hydro题目存储格式<br>
一. 制做最简单的oj题<br>
二. 含有自定义头文件的oj题，即函数交互式的题目<br>
三. 半自动对拍的oj题，即不需要录入预期输出的题<br>
四. 完全对拍题，即不需要录入输入数据和输出数据的题<br>
五. 指定输入文件和输出文件<br>
六. 多个子任务<br>
七. 客观题，即制做有标准答案的填空和选择题.</p>
<h2 id="零-hydro题目存储格式"> 零. hydro题目存储格式</h2>
<p>如果想在本地建立好题目，然后批量上传的话. 下面的格式应该对你有帮助<br>
每个题目应自占一个目录，目录名为题目编号比如1 ，2，3，4等等.<br>
每个题目目录下一般有下面的元素：<br>
<code>problem_zh.md</code> 这个文件是就是题目的内容，即题目的描述，是一个markdown格式的文档.<br>
<code>probelm.yaml</code> 文件.这个是题目的配置信息. 比如标题和标签等。<br>
testdata 子目录，对应网站里的测试数据部分里的文件，<br>
里面至少有一个config.yaml文件 用来说明测试的类型.具体内容见后面的例子<br>
如果题目有测试用例，则每个用例至少要提供一个in文件和一个输出文件(但有些测试类型不用，详情见后)<br>
additional_file子目录用来存放给做题者用的额外文件，比如头文件，图片，pdf文档等，在题目的 markdown 文档中可以用下面的格式为这些文件提供下载链接：[提示文字](file://xxx.txt)</p>
<p>下面为手工录入各种题型的步骤，即在网站登录后点创建题目之后的操作.如下图所示
<img src="./pictures/pic1.png" alt="pic1" loading="lazy"></p>
<p>我们假定题目内容均为下面的markdown文档</p>
<div><pre><code># 要求

输入两个整数，输出他们的和

# 样例

```input1
123 500
```

```output1
623
```
</code></pre>
</div><h2 id="一-制做最简单的oj题目"> 一 制做最简单的OJ题目</h2>
<p>题目网址: http://82.157.98.222:8888/p/P10000</p>
<ol>
<li>新建题目之后编辑题目内容，输入题号和标题，然后点创建按钮。如下图所示.</li>
<li>此时出现下面的图，点创建文件，文件名为 <code>1.in</code>, 表示用例 1 的输入</li>
<li>编辑 <code>1.in</code> 的内容为两个整数比如 2 和 3 ，空格分开，如下图所示，然后点确定</li>
<li>类似办法创建一个 <code>1.out</code> 文件，内容为 5 ，注意数字编号必须和 in 文件一致，创建之后的文件列表和下面类似.</li>
</ol>
<p><img src="./pictures/pic11.png" alt="pic11" loading="lazy"></p>
<ol start="5">
<li>这样第一个用例的输入和预期输出就录入完毕，现在可以做本题了</li>
<li>本题的 AC 代码为:</li>
</ol>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>cpp</div><div class='code-container'><code><div class='line'><span style="color: #5E81AC">#</span><span style="color: #81A1C1">include</span><span style="color: #5E81AC"> </span><span style="color: #ECEFF4">&lt;</span><span style="color: #A3BE8C">iostream</span><span style="color: #ECEFF4">&gt;</span></div><div class='line'><span style="color: #81A1C1">using</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">namespace</span><span style="color: #D8DEE9FF"> std</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">main</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">argc</span><span style="color: #ECEFF4">,</span><span style="color: #81A1C1">char*</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">argv</span><span style="color: #ECEFF4">[]){</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> a</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">b</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    cin</span><span style="color: #81A1C1">&gt;&gt;</span><span style="color: #D8DEE9FF">a</span><span style="color: #81A1C1">&gt;&gt;</span><span style="color: #D8DEE9FF">b</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    cout </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">a</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9FF">b</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">}</span></div></code></div></pre>
<div></div></div><p></p>
<h2 id="二、函数交互型题目"> 二、函数交互型题目</h2>
<p>题目网址: http://82.157.98.222:8888/p/P10001<br>
本类型和类型一的区别在于出题者要向做题者提供一个额外的头文件，做题者的主函数里可以包含这个头文件以调用出题者提供的某些函数，或者实现头文件里指定的函数.</p>
<ol>
<li>题目内容的录入以及测试数据的录入和类型一样</li>
<li>本题要额外上传两个文件.分别为 <code>tools.h</code> 和 <code>config.yaml</code> ，如下图所示</li>
</ol>
<p><img src="./pictures/pic10.png" alt="pic10" loading="lazy"></p>
<p><code>tools.h</code> 的内容为</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>cpp</div><div class='code-container'><code><div class='line'><span style="color: #5E81AC">#</span><span style="color: #81A1C1">include</span><span style="color: #ECEFF4">&lt;</span><span style="color: #A3BE8C">iostream</span><span style="color: #ECEFF4">&gt;</span></div><div class='line'><span style="color: #81A1C1">using</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">namespace</span><span style="color: #D8DEE9FF"> std</span><span style="color: #81A1C1">;</span></div><div class='line'></div><div class='line'><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">add</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">,</span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">y</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span><span style="color: #616E88">  //留待做题者实现</span></div><div class='line'></div><div class='line'><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">main</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">argc</span><span style="color: #ECEFF4">,</span><span style="color: #81A1C1">char*</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">argv</span><span style="color: #ECEFF4">[]){</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> a</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">b</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    cin</span><span style="color: #81A1C1">&gt;&gt;</span><span style="color: #D8DEE9FF">a</span><span style="color: #81A1C1">&gt;&gt;</span><span style="color: #D8DEE9FF">b</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    cout </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">add</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">a</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">b</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">}</span></div></code></div></pre>
<div></div></div><p>这个头文件里实现了一个主函数，并且声明了需要做题者实现的函数add，当然，出题者应该在题目要求里写明这个函数的原型以及把tools.h文件上传到附加文件列表中，以方便做题者.<br>
题面里可以用如下格式为用户提供下载链接，中括号内的内容可以自己写，[tools.h](file://tools.h) 如下面所示</p>
<p><img src="./pictures/pic8.png" alt="pic8" loading="lazy"></p>
<p><img src="./pictures/pic9.png" alt="pic9" loading="lazy"></p>
<p>config.yaml文件的内容为</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>yaml</div><div class='code-container'><code><div class='line'><span style="color: #8FBCBB">type</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">default</span></div><div class='line'><span style="color: #8FBCBB">filename</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">null</span></div><div class='line'><span style="color: #8FBCBB">user_extra_files</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">tools.h</span></div></code></div></pre>
<div></div></div><p>本题的ac代码为</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>cpp</div><div class='code-container'><code><div class='line'><span style="color: #5E81AC">#</span><span style="color: #81A1C1">include</span><span style="color: #5E81AC"> </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">tools.h</span><span style="color: #ECEFF4">"</span></div><div class='line'><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">add</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">x</span><span style="color: #ECEFF4">,</span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">y</span><span style="color: #ECEFF4">){</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> x</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9FF">y</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">}</span></div></code></div></pre>
<div></div></div><p>可见本类型的题目，做题者包含给定的头文件后，可以不需要自己实现主函数，只需要专心实现给定的函数即可.</p>
<h2 id="三-半对拍-自己指定评测程序并修改测试输出格式"> 三,半对拍-自己指定评测程序并修改测试输出格式</h2>
<p>例题网址:http://82.157.98.222:8888/p/P10002<br>
本题型的特点是不需要手工给出每个用例的预期输出，但是要自己编写一个样本程序,测试时会把用户的输出和样本程序的输出进行对比。</p>
<p>仍以两数求和为例</p>
<ol>
<li>题目内容和类型一类似</li>
<li>测试数据部分只需要提供1.in</li>
<li>编写一个样本程序 <code>checker.cc</code>，内容如下:</li>
</ol>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>cpp</div><div class='code-container'><code><div class='line'><span style="color: #5E81AC">#</span><span style="color: #81A1C1">include</span><span style="color: #5E81AC"> </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">testlib.h</span><span style="color: #ECEFF4">"</span></div><div class='line'><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">main</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">argc</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">char</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">*</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">argv</span><span style="color: #ECEFF4">[])</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">registerTestlibCmd</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">argc</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> argv</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> a </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">inf</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">readInt</span><span style="color: #ECEFF4">()</span><span style="color: #81A1C1">;</span><span style="color: #616E88">   // 读取输入流的第一个整数</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> b </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">inf</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">readInt</span><span style="color: #ECEFF4">()</span><span style="color: #81A1C1">;</span><span style="color: #616E88">   // 读取输入流的下一个整数</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> d </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> a</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9FF">b</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> c </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">ouf</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">readInt</span><span style="color: #ECEFF4">()</span><span style="color: #81A1C1">;</span><span style="color: #616E88">   // 读取输出流的下一个整数</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">a</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9FF">b </span><span style="color: #81A1C1">!=</span><span style="color: #D8DEE9FF"> c</span><span style="color: #ECEFF4">)</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">quitf</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">_wa</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">%d + %d expected %d, found %d</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> a</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> b</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">d</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">c</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span><span style="color: #616E88">   //输出错误的具体信息,便于做题者调试</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">else</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">quitf</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">_ok</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">answer of %d +  %d is %d</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">a</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">b</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">c</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">}</span></div></code></div></pre>
<div></div></div><ol start="4">
<li>config.yaml文件的内容如下:</li>
</ol>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>yaml</div><div class='code-container'><code><div class='line'><span style="color: #8FBCBB">checker_type</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">testlib</span></div><div class='line'><span style="color: #8FBCBB">checker</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">checker.cc</span></div><div class='line'><span style="color: #8FBCBB">cases</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">1.in</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">/dev/null</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 无输出</span></div></code></div></pre>
<div></div></div><p>最终的测试文件列表如下所示:</p>
<p><img src="./pictures/pic7.png" alt="pic7" loading="lazy"></p>
<p>当程序有错误时,输出的效果如下</p>
<p>可见这里输出了错误细节,便于做题者调试</p>
<p>本题的ac代码和类型一的一样,内容为</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>cpp</div><div class='code-container'><code><div class='line'><span style="color: #5E81AC">#</span><span style="color: #81A1C1">include</span><span style="color: #5E81AC"> </span><span style="color: #ECEFF4">&lt;</span><span style="color: #A3BE8C">iostream</span><span style="color: #ECEFF4">&gt;</span></div><div class='line'><span style="color: #81A1C1">using</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">namespace</span><span style="color: #D8DEE9FF"> std</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">main</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">argc</span><span style="color: #ECEFF4">,</span><span style="color: #81A1C1">char*</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">argv</span><span style="color: #ECEFF4">[]){</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> a</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">b</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    cin</span><span style="color: #81A1C1">&gt;&gt;</span><span style="color: #D8DEE9FF">a</span><span style="color: #81A1C1">&gt;&gt;</span><span style="color: #D8DEE9FF">b</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    cout </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">a</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9FF">b</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">}</span></div></code></div></pre>
<div></div></div><p></p>
<h1 id="四-全自动对拍题"> 四. 全自动对拍题</h1>
<p>如果不希望自己录入输入数据,而是在每次测试时自动动态生成的话,可以将题目类型设为<code>interactive</code>,并提供一个对拍程序.仍以求和为例<br>
例题网址: http://82.157.98.222:8888/p/P10005</p>
<p>最后测试数据部分的文件列表如下图所示</p>
<p><img src="./pictures/pic6.png" alt="pic6" loading="lazy"></p>
<ol>
<li><code>checker.cc</code>,内容为:</li>
</ol>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>cpp</div><div class='code-container'><code><div class='line'><span style="color: #5E81AC">#</span><span style="color: #81A1C1">include</span><span style="color: #5E81AC"> </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">testlib.h</span><span style="color: #ECEFF4">"</span></div><div class='line'><span style="color: #5E81AC">#</span><span style="color: #81A1C1">include</span><span style="color: #5E81AC"> </span><span style="color: #ECEFF4">&lt;</span><span style="color: #A3BE8C">iostream</span><span style="color: #ECEFF4">&gt;</span></div><div class='line'><span style="color: #81A1C1">using</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">namespace</span><span style="color: #D8DEE9FF"> std</span><span style="color: #81A1C1">;</span></div><div class='line'></div><div class='line'><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">main</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">argc</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">char*</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">argv</span><span style="color: #ECEFF4">[])</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">{</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">setName</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">Interactor A+B</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #88C0D0">registerInteraction</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">argc</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> argv</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #616E88">    //自动生成两个随机整数</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #D8DEE9">rnd</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">setSeed</span><span style="color: #ECEFF4">(</span><span style="color: #88C0D0">time</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">NULL</span><span style="color: #ECEFF4">))</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> a </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">rnd</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">next</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">1000</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> b </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">rnd</span><span style="color: #ECEFF4">.</span><span style="color: #88C0D0">next</span><span style="color: #ECEFF4">(</span><span style="color: #B48EAD">1000</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> d </span><span style="color: #81A1C1">=</span><span style="color: #D8DEE9FF"> a</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9FF">b</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #616E88">    // 本程序的输出将作为用户程序的输入</span></div><div class='line'><span style="color: #D8DEE9FF">    cout </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> a </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C"> </span><span style="color: #ECEFF4">"</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> b </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #D8DEE9FF"> endl</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> c</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #616E88">    // 用户程序的最后输出将作为本程序的输入</span></div><div class='line'><span style="color: #D8DEE9FF">    cin </span><span style="color: #81A1C1">&gt;&gt;</span><span style="color: #D8DEE9FF"> c</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #616E88">    //对比用户结果和预期结果</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">if</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">a</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9FF">b </span><span style="color: #81A1C1">!=</span><span style="color: #D8DEE9FF"> ans</span><span style="color: #ECEFF4">)</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">quitf</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">_wa</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">%d + %d expected %d, found %d</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> a</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> b</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">d</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">c</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span><span style="color: #616E88">   //输出错误的具体信息,便于做题者调试</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">else</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #88C0D0">quitf</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">_ok</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">answer of %d +  %d is %d</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">a</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">b</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">c</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">}</span></div></code></div></pre>
<div></div></div><ol start="2">
<li><code>config.yaml</code> 文件的内容为:</li>
</ol>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>yaml</div><div class='code-container'><code><div class='line'><span style="color: #8FBCBB">type</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">interactive</span></div><div class='line'><span style="color: #8FBCBB">interactor</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">checker.cc</span></div><div class='line'><span style="color: #8FBCBB">cases</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">/dev/null</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># no input and no output, dynamic generated</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">/dev/null</span></div><div class='line'><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">/dev/null</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># no input and no output, dynamic generated</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">/dev/null</span></div></code></div></pre>
<div></div></div><p><img src="./pictures/pic5.png" alt="pic" loading="lazy"></p>
<p>AC 代码和类型一中的相同</p>
<h2 id="五-文件读写测试"> 五.文件读写测试</h2>
<p>例题网址:http://82.157.98.222:8888/p/P10003<br>
有时希望指定输入和输出文件，此时测试文件 <code>1.in</code> 和 <code>1.out</code> 和类型一类似,
但是要提供config.yaml文件，内容类似于下</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>yaml</div><div class='code-container'><code><div class='line'><span style="color: #8FBCBB">file</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">test</span></div></code></div></pre>
<div></div></div><p>则运行时测试环境会自动把每个输入文件复制到test.in中,输出内容和test.out的内容进行对比.
ac的代码如下:</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>cpp</div><div class='code-container'><code><div class='line'><span style="color: #5E81AC">#</span><span style="color: #81A1C1">include</span><span style="color: #5E81AC"> </span><span style="color: #ECEFF4">&lt;</span><span style="color: #A3BE8C">fstream</span><span style="color: #ECEFF4">&gt;</span></div><div class='line'><span style="color: #81A1C1">using</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">namespace</span><span style="color: #D8DEE9FF"> std</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #88C0D0">main</span><span style="color: #ECEFF4">(</span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">argc</span><span style="color: #ECEFF4">,</span><span style="color: #81A1C1">char*</span><span style="color: #D8DEE9FF"> </span><span style="color: #D8DEE9">argv</span><span style="color: #ECEFF4">[]){</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">int</span><span style="color: #D8DEE9FF"> a</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF">b</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    ifstream </span><span style="color: #88C0D0">ifs</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">test.in</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    ifs</span><span style="color: #81A1C1">&gt;&gt;</span><span style="color: #D8DEE9FF">a</span><span style="color: #81A1C1">&gt;&gt;</span><span style="color: #D8DEE9FF">b</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    ofstream </span><span style="color: #88C0D0">ofs</span><span style="color: #ECEFF4">(</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">test.out</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    ofs </span><span style="color: #81A1C1">&lt;&lt;</span><span style="color: #ECEFF4">(</span><span style="color: #D8DEE9FF">a</span><span style="color: #81A1C1">+</span><span style="color: #D8DEE9FF">b</span><span style="color: #ECEFF4">)</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #81A1C1">return</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span><span style="color: #81A1C1">;</span></div><div class='line'><span style="color: #ECEFF4">}</span></div></code></div></pre>
<div></div></div><p></p>
<h2 id="六-子任务测试"> 六,子任务测试.</h2>
<p>例题网址: https://hydro.ac/d/system_test/p/7</p>
<ol>
<li>提供好题目和各个子任务的输入、输出文件 建议文件名格式为 <code>data&lt;id&gt;-&lt;数字&gt;</code> id为子任务编号</li>
<li>config.yaml文件的内容参考如下</li>
</ol>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>yaml</div><div class='code-container'><code><div class='line'><span style="color: #8FBCBB">time</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">100ms</span></div><div class='line'><span style="color: #8FBCBB">memory</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">8m</span></div><div class='line'><span style="color: #8FBCBB">subtasks</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">score</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">20</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">id</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">0</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">cases</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data1-1.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data1-1.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data1-2.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data1-2.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data1-3.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data1-3.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data1-4.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data1-4.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data1-5.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data1-5.ans</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">score</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">20</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">id</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">1</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">cases</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data2-1.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data2-1.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data2-2.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data2-2.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data2-3.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data2-3.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data2-4.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data2-4.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data2-5.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data2-5.ans</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">score</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">20</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">id</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">cases</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data3-1.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data3-1.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data3-2.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data3-2.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data3-3.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data3-3.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data3-4.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data3-4.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data3-5.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data3-5.ans</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">score</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">20</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">id</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">3</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">if</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">2</span><span style="color: #ECEFF4">]</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">cases</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data4-1.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data4-1.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data4-2.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data4-2.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data4-3.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data4-3.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data4-4.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data4-4.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data4-5.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data4-5.ans</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">score</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">20</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">id</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">4</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">if</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">1</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">3</span><span style="color: #ECEFF4">]</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">cases</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data5-1.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data5-1.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data5-2.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data5-2.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data5-3.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data5-3.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data5-4.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data5-4.ans</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data5-5.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">data5-5.ans</span></div></code></div></pre>
<div></div></div><p>可以看出if 用来指定前置子任务.<br>
此外,如果某个子任务没有提供cases部分时,测试时会自动寻找类似于 <code>data&lt;id&gt;-x.in</code> 和<code>data&lt;id&gt;-x.out</code> 的文件,id为子任务编号<br>
上面的例子故意设计为子任务编号和用例文件中的编号不同,所有每个子任务都需要手工指定对应的cases.</p>
<p></p>
<h2 id="七-客观题制做"> 七,客观题制做</h2>
<p>例题网址:http://82.157.98.222:8888/p/P10004<br>
客观题只需要题面和config.yaml文件.
例子如下:</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>yaml</div><div class='code-container'><code><div class='line'><span style="color: #616E88"># 第 0 道题目</span></div><div class='line'><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">desc</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">这是一道普普通通的选择题</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">choices</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 如果是选择题需要包含 choise 选项并列出题目的每一个选项的具体信息。</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">A. 1 + 1 = 1</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">B. 1 + 1 = 2</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">C. 1 + 1 = 3</span></div><div class='line'><span style="color: #616E88"># 第 1 道题目</span></div><div class='line'><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">desc</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">1 + 1 = ?</span></div><div class='line'><span style="color: #616E88"># 若不包含 choise 选项则该题为填空题</span></div></code></div></pre>
<div></div></div><p><img src="./pictures/pic4.png" alt="pic4" loading="lazy"></p>
<p>上传的 <code>config.yaml</code> 内容为</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>yaml</div><div class='code-container'><code><div class='line'><span style="color: #8FBCBB">type</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">objective</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 表明该题为客观题</span></div><div class='line'><span style="color: #8FBCBB">outputs</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 列举出每一题的正确选项与对应的得分</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #A3BE8C">B. 1 + 1 = 2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">50</span><span style="color: #ECEFF4">]</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">2</span><span style="color: #ECEFF4">'</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">50</span><span style="color: #ECEFF4">]</span></div></code></div></pre>
<div></div></div><p>题目运行效果如下：</p>
<p><img src="./pictures/pic3.png" alt="pic3" loading="lazy"></p>
<p>做完之后点提交,效果如下</p>
<p><img src="./pictures/pic2.png" alt="pic2" loading="lazy"></p>
<p>可见评分结果正确.</p>
<h2 id="八-小结"> 八.小结</h2>
<p>对所有编程题目,题面是必须录入的,如果指定了测试程序时,可以不需要录入输出数据.<br>
如果设置测试方式为interactive,输入数据也不需要手工录入.<br>
想指特殊的测试方式时,一般需要上传一个config.yaml文件,并设置对应字段的值.<br>
对编程题,本文档中用到的字段有</p>
<p>type字段一般为default, 对全自动对拍题,设为interactive</p>
<p>checker_type: testlib
checker: checker.cc
用来指定自定义的测试程序,即对拍程序</p>
<p>filename: test用来指定对test.in文件和test.out文件进行读写.</p>
<p>cases:</p>
<ul>
<li>input: 1.in</li>
</ul>
<p>用来指定测试用例.</p>
<p>更详细的介绍见
https://hydro.js.org/docs/user/testdata/</p>
]]></content:encoded>
    </item>
    <item>
      <title>题目</title>
      <link>https://hydro.js.org/docs/user/problem/</link>
      <guid>https://hydro.js.org/docs/user/problem/</guid>
      <source url="https://hydro.js.org/rss.xml">题目</source>
      <pubDate>Fri, 13 Aug 2021 04:13:21 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="题目"> 题目</h1>
<h2 id="创建题目"> 创建题目</h2>
<p>拥有 PERM_CREATE_PROBLEM 的用户均可以新建题目。<br>
请点击题库页面右下角的 <code>创建题目</code> 按钮。</p>
<div><p>Tips</p>
<p>题目 ID 不能全为数字。若留空则使用自动分配的数字题号。</p>
</div>
<p>详见 <a href="./problem-create.html">laomai 编写的说明</a></p>
<h2 id="导入题目"> 导入题目</h2>
<h3 id="从-hydro-导入"> 从 Hydro 导入</h3>
<p>上传 Hydro 导出的题目压缩包即可。</p>
<h3 id="从-syzoj-导入"> 从 SYZOJ 导入</h3>
<p>Hydro 提供了一个小工具 <a href="https://github.com/hydro-dev/loj-download" target="_blank" rel="noopener noreferrer">loj-download</a>，可从基于原版 SYZOJ/SYZOJ-NG 搭建的源站下载到符合Hydro格式的题目压缩包。<br>
工具使用方法在此不做详细描述，请自行摸索并确保在网络通畅的环境下使用。</p>
<h3 id="从-fps-文件导入"> 从 FPS 文件导入</h3>
<p>见插件 <a href="/plugins/fps-importer/">fps-importer</a>。</p>
<h3 id="从-qduoj-导入"> 从 QDUOJ 导入</h3>
<p>见插件 import-qduoj。
</p>
<h2 id="编辑"> 编辑</h2>
<h3 id="题面"> 题面</h3>
<p>题面使用 Markdown 语法，并进行了部分扩展。</p>
<p>支持对样例数据分组显示：</p>
<pre><code>```input1
1 2
```

```output1
3
```</code></pre>
<p>后接的数字为测试点编号，将自动合并，并左右分栏显示。</p>
<p>支持从附加文件引用资源。（您可以先创建题目，上传相关文件后再编辑该题目）</p>
<ul>
<li>附加文件下载链接： <code>[file](file://input.in)</code></li>
<li>从附加文件引用一张图片： <code>![img](file://foo.jpg)</code></li>
<li>从附加文件引用 pdf 作为题面：<code>@[pdf](file://foo.pdf)</code> （该功能在部分环境可能不正常。请考虑使用 <a href="https://github.com/Ri-moe/hydro-pdf" target="_blank" rel="noopener noreferrer">hydro-pdf</a> 插件。）</li>
<li>从附加文件引用 word 文档作为题面： <code>@[doc](file://foo.docx)</code> （依赖 onlyoffice 插件）
</li>
</ul>
<p>题面支持合并表格：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>markdown</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">| 1   | 1   | 3   | 4   | 5   |</span></div><div class='line'><span style="color: #D8DEE9FF">| --- | --- | --- | --- | --- |</span></div><div class='line'><span style="color: #D8DEE9FF">| 1   | 1   | 2   | 2   | 6   |</span></div><div class='line'><span style="color: #D8DEE9FF">| 1   | 1   | 2   | 2   | 7   |</span></div><div class='line'><span style="color: #D8DEE9FF">| 1   | 4   | 3   | 5   | 5   |</span></div></code></div></pre>
<div></div></div><p>将被渲染为：</p>
<p><img src="./pictures/pict1.png" alt="img" loading="lazy"></p>
<p>支持内嵌 HTML：（用来对付部分 Markdown 搞不定的东西）</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>markdown</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">&lt;span bgcolor="red"&gt;foo&lt;/span&gt;</span></div></code></div></pre>
<div></div></div><h3 id="标签"> 标签</h3>
<p>可点击右侧分类面板快速添加标签，也可以用英文半角逗号分隔多个标签。</p>
<h2 id="文件"> 文件</h2>
<p>您可以在题目右侧“文件”面板上传测试数据和附加文件。（支持拖拽文件至相应位置进行上传）<br>
<a href="/docs/user/testdata">测试数据格式</a>。</p>
<h2 id="客观题"> 客观题</h2>
<p>由于客观题的题面和测试数据配置均与其他题目不同，所以这里单独给出配置客观题的方法。</p>
<h3 id="题面-2"> 题面</h3>
<p>题面需要以 yaml 格式给出。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>yaml</div><div class='code-container'><code><div class='line'><span style="color: #616E88"># 第 0 道题目</span></div><div class='line'><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">desc</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">这是一道普普通通的选择题</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">choices</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 如果是选择题需要包含 choise 选项并列出题目的每一个选项的具体信息。</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">A. 1 + 1 = 1</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">B. 1 + 1 = 2</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">C. 1 + 1 = 3</span></div><div class='line'><span style="color: #616E88"># 第 1 道题目</span></div><div class='line'><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">desc</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">1 + 1 = ?</span></div><div class='line'><span style="color: #616E88"># 若不包含 choise 选项则该题为填空题</span></div></code></div></pre>
<div></div></div><p>上面这个例子对应的题面为：</p>
<p><img src="./pictures/pict2.png" alt="img" loading="lazy"></p>
<h3 id="测试数据"> 测试数据</h3>
<p>仅需要配置 config.yaml 即可，不需要上传其他文件。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>yaml</div><div class='code-container'><code><div class='line'><span style="color: #8FBCBB">type</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">objective</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 表明该题为客观题</span></div><div class='line'><span style="color: #8FBCBB">outputs</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 列举出每一题的正确选项与对应的得分</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #A3BE8C">B. 1 + 1 = 2</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">50</span><span style="color: #ECEFF4">]</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">2</span><span style="color: #ECEFF4">'</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">50</span><span style="color: #ECEFF4">]</span></div></code></div></pre>
<div></div></div>]]></content:encoded>
      <enclosure url="file://foo.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>测试数据格式</title>
      <link>https://hydro.js.org/docs/user/testdata/</link>
      <guid>https://hydro.js.org/docs/user/testdata/</guid>
      <source url="https://hydro.js.org/rss.xml">测试数据格式</source>
      <pubDate>Thu, 16 Sep 2021 09:52:14 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="测试数据格式"> 测试数据格式</h1>
<h2 id="自动模式"> 自动模式</h2>
<div><p>Tips</p>
<p>您可以直接选择文件（支持多选）上传或将文件拖拽至相应位置上传。<br>
若上传文件为 zip 格式，将会自动进行解压操作。</p>
</div>
<p>对于一般的题目，您只需提供 <code>.in</code> 和 <code>.out/.ans</code> 文件，以下是一个例子。<br>
请务必确保文件名中含有数字。形如 <code>sample.in</code> 的文件是不会被自动识别的。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>bash</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">喵</span><span style="color: #81A1C1">?</span><span style="color: #D8DEE9FF"> tree</span></div><div class='line'><span style="color: #88C0D0">.</span></div><div class='line'><span style="color: #D8DEE9FF">├── a1.in</span></div><div class='line'><span style="color: #D8DEE9FF">├── a1.out</span></div><div class='line'><span style="color: #D8DEE9FF">├── a2.in</span></div><div class='line'><span style="color: #D8DEE9FF">├── a2.out</span></div><div class='line'><span style="color: #D8DEE9FF">├── a3.in</span></div><div class='line'><span style="color: #D8DEE9FF">└── a3.out</span></div></code></div></pre>
<div></div></div><p>测试数据将被自动识别，并使用 1S 256MB 的限制。</p>
<h2 id="使用配置文件"> 使用配置文件</h2>
<div><p>Tips</p>
<p>推荐您在线编辑题目配置（点击 Create File，输入文件名 <code>config.yaml</code>），将检查配置有效性。</p>
</div>
<p>上传 <code>config.yaml</code> 文件即可，文件格式如下（下方所有样例均为可选项，若无说明则预填写的内容即为默认值）：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>yaml</div><div class='code-container'><code><div class='line'><span style="color: #616E88"># 题目类型，可以为 default(比对输出，可以含spj), objective(客观题), interactive(交互题)</span></div><div class='line'><span style="color: #8FBCBB">type</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">default</span></div><div class='line'></div><div class='line'><span style="color: #616E88"># 全局时空限制（此处的限制优先级低于测试点的限制）</span></div><div class='line'><span style="color: #8FBCBB">time</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">1s</span></div><div class='line'><span style="color: #8FBCBB">memory</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">128m</span></div><div class='line'></div><div class='line'><span style="color: #616E88"># 输入输出文件名（例：使用 foo.in 和 foo.out），若使用标准 IO 删除此配置项即可</span></div><div class='line'><span style="color: #8FBCBB">filename</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">foo</span></div><div class='line'></div><div class='line'><span style="color: #616E88"># 此部分设置当题目类型为 default 时生效</span></div><div class='line'><span style="color: #616E88"># 比较器类型，支持的值有 default（直接比对，忽略行末空格和文件末换行）, ccr, cena, hustoj, lemon, qduoj, syzoj, testlib(比较常用)</span></div><div class='line'><span style="color: #8FBCBB">checker_type</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">default</span></div><div class='line'><span style="color: #616E88"># 比较器文件（当比较器类型不为 default 时填写）</span></div><div class='line'><span style="color: #616E88"># 文件路径（位于压缩包中的路径）</span></div><div class='line'><span style="color: #616E88"># 将通过扩展名识别语言，与编译命令处一致。在默认配置下，C++ 扩展名应为 .cc 而非 .cpp</span></div><div class='line'><span style="color: #8FBCBB">checker</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">chk.cc</span></div><div class='line'></div><div class='line'><span style="color: #616E88"># 此部分设置当题目类型为interactive时生效</span></div><div class='line'><span style="color: #616E88"># 交互器路径（位于压缩包中的路径）</span></div><div class='line'><span style="color: #8FBCBB">interactor</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">interactor.cc</span></div><div class='line'></div><div class='line'><span style="color: #616E88"># Extra files 额外文件</span></div><div class='line'><span style="color: #616E88"># These files will be copied to the working directory 这些文件将被复制到工作目录。</span></div><div class='line'><span style="color: #616E88"># 提示：您无需手动上传 testlib.h。</span></div><div class='line'><span style="color: #8FBCBB">user_extra_files</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">extra_input.txt</span></div><div class='line'><span style="color: #8FBCBB">judge_extra_files</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">extra_file.txt</span></div><div class='line'></div><div class='line'><span style="color: #616E88"># Test Cases 测试数据列表</span></div><div class='line'><span style="color: #616E88"># If neither CASES or SUBTASKS are set(or config.yaml doesn't exist), judge will try to locate them automaticly.</span></div><div class='line'><span style="color: #616E88"># 如果 CASES 和 SUBTASKS 都没有设置或 config.yaml 不存在， 系统会自动尝试识别数据点。</span></div><div class='line'><span style="color: #616E88"># We support these names for auto mode: 自动识别支持以下命名方式：</span></div><div class='line'><span style="color: #616E88"># 1. [name(optional)][number].(in/out/ans)         RegExp: /^([a-zA-Z]*)([0-9]+).in$/</span></div><div class='line'><span style="color: #616E88">#   examples: </span></div><div class='line'><span style="color: #616E88">#     - c1.in / c1.out</span></div><div class='line'><span style="color: #616E88">#     - 1.in / 1.out</span></div><div class='line'><span style="color: #616E88">#     - c1.in / c1.ans</span></div><div class='line'><span style="color: #616E88"># 2. input[number].txt / output[number].txt        RegExp: /^(input)([0-9]+).txt$/</span></div><div class='line'><span style="color: #616E88">#   - example: input1.txt / input2.txt</span></div><div class='line'><span style="color: #616E88">#</span></div><div class='line'><span style="color: #616E88"># The CASES option has higher priority than the SUBTASKS option!</span></div><div class='line'><span style="color: #616E88"># 在有 CASES 设置项时，不会读取 SUBTASKS 设置项！</span></div><div class='line'><span style="color: #8FBCBB">score</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">50</span><span style="color: #D8DEE9FF">     </span><span style="color: #616E88"># 单个测试点分数</span></div><div class='line'><span style="color: #8FBCBB">time</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">1s</span><span style="color: #D8DEE9FF">      </span><span style="color: #616E88"># 时间限制</span></div><div class='line'><span style="color: #8FBCBB">memory</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">256m</span><span style="color: #D8DEE9FF">  </span><span style="color: #616E88"># 内存限制</span></div><div class='line'><span style="color: #8FBCBB">cases</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">abc.in</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">def.out</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">ghi.in</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">jkl.out</span></div><div class='line'><span style="color: #616E88"># 或使用Subtask项：</span></div><div class='line'><span style="color: #8FBCBB">subtasks</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">score</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">30</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">type</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">min</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 可选 min/max/sum，分别表示取所有测试点最小值、所有测试点最大值、所有测试点之和</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">time</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">1s</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">memory</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">64m</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">cases</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">a.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">a.out</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">b.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">b.out</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">score</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">70</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">time</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">0.5s</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">memory</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">32m</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">if</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #B48EAD">0</span><span style="color: #ECEFF4">]</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 可选，传入数组，表示仅在subtask0通过时此subtask才计分</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">cases</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">c.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">c.out</span></div><div class='line'><span style="color: #D8DEE9FF">      </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #8FBCBB">input</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">d.in</span></div><div class='line'><span style="color: #D8DEE9FF">        </span><span style="color: #8FBCBB">output</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">d.out</span></div><div class='line'></div><div class='line'><span style="color: #616E88"># 提交语言限制</span></div><div class='line'><span style="color: #616E88"># 列举出所有本题允许使用的语言对应的代码（需要和评测机 lang.yaml 内的语言代码相同）</span></div><div class='line'><span style="color: #616E88"># 使用语言ID而非名称！对于有子类的选项，请详细至子分类！</span></div><div class='line'><span style="color: #8FBCBB">langs</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">c</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cc</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cc.cc11o2</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">pas</span></div></code></div></pre>
<div></div></div><p>可以在 <a href="https://hydro.ac/d/system_test/" target="_blank" rel="noopener noreferrer">此题库</a> 中找到各种类型题目的配置示例。</p>
]]></content:encoded>
    </item>
    <item>
      <title>插件</title>
      <link>https://hydro.js.org/plugins/</link>
      <guid>https://hydro.js.org/plugins/</guid>
      <source url="https://hydro.js.org/rss.xml">插件</source>
      <pubDate>Wed, 22 Jul 2020 10:21:41 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="插件"> 插件</h1>
<p>Hydro 支持使用插件扩展自身所支持的功能。</p>
<div><p>Note</p>
<p>插件对站点的所有内容具有完全的访问权限，请不要启用来历不明的插件。</p>
</div>
<h2 id="附加组件列表"> 附加组件列表</h2>
<p>Hydro 官方目前提供了以下附加组件：</p>
<table>
<thead>
<tr>
<th>ID</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>@hydrooj/fps-importer</td>
<td>导入 fps 格式的题目</td>
</tr>
<tr>
<td>@hydrooj/geoip</td>
<td>显示用户登录地</td>
</tr>
<tr>
<td>@hydrooj/hydrojudge</td>
<td>评测组件</td>
</tr>
<tr>
<td>@hydrooj/import-qduoj</td>
<td>导入 QDUOJ 导出的题库</td>
</tr>
<tr>
<td>@hydrooj/login-with-github</td>
<td>允许用户使用 GitHub 登录</td>
</tr>
<tr>
<td>@hydrooj/login-with-google</td>
<td>允许用户使用 Google 登录</td>
</tr>
<tr>
<td>@hydrooj/migrate-vijos</td>
<td>从 vijos4 的自动升级工具</td>
</tr>
<tr>
<td>@hydrooj/migrate-hustoj</td>
<td>从 HustOJ 导入所有数据</td>
</tr>
<tr>
<td>@hydrooj/recaptcha</td>
<td>注册时启用 reCAPTCHA 验证码</td>
</tr>
<tr>
<td>@hydrooj/ui-default</td>
<td>Hydro 的默认用户界面</td>
</tr>
<tr>
<td>@hydrooj/onlyoffice</td>
<td>显示 doc/docx 格式题目</td>
</tr>
<tr>
<td>@hydrooj/sonic</td>
<td>基于 sonic 的题目搜索增强</td>
</tr>
<tr>
<td>@hydrooj/elastic-search</td>
<td>基于 Elastic 的题目搜索增强</td>
</tr>
<tr>
<td>@hydrooj/vjudge</td>
<td>Codeforces/SPOJ/UOJ/POJ/Luogu</td>
</tr>
</tbody>
</table>
<p>以下插件由社区提供：</p>
<table>
<thead>
<tr>
<th>ID</th>
<th>作者</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="//github.com/Ri-moe/hydro-pdf">hydro-pdf-preview</a></td>
<td>wuxianucw</td>
<td>使用 PDF.js 在题面中插入 PDF</td>
</tr>
</tbody>
</table>
<p>大部分插件的配置均可在安装后于 控制面板&gt;系统设置 中找到。</p>
<p>部分插件若安装后没有正确配置可能会影响系统正常使用！</p>
<h2 id="安装"> 安装</h2>
<p>先全局安装所需模块，再向 hydrooj 注册即可。例：安装 @hydrooj/geoip</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">yarn global add @hydrooj/geoip</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj addon add @hydrooj/geoip</span></div></code></div></pre>
<div></div></div><p><strong>安装完插件后需要重启 hydrooj 以使插件生效。</strong></p>
<h2 id="更新"> 更新</h2>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">yarn global upgrade-interactive --latest</span></div></code></div></pre>
<div></div></div><h2 id="卸载"> 卸载</h2>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">yarn global remove @hydrooj/geoip</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj addon remove @hydrooj/geoip</span></div></code></div></pre>
<div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>fps-importer</title>
      <link>https://hydro.js.org/plugins/fps-importer/</link>
      <guid>https://hydro.js.org/plugins/fps-importer/</guid>
      <source url="https://hydro.js.org/rss.xml">fps-importer</source>
      <pubDate>Tue, 20 Apr 2021 05:10:12 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="fps-importer"> fps-importer</h1>
<h2 id="从-fps-文件导入题目"> 从 fps 文件导入题目</h2>
<p>在题库右侧“创建题目”一栏中选择“从 FPS 文件导入”。<br>
在打开的窗口中，您可以上传：</p>
<ul>
<li>fps 格式的 xml 文件</li>
<li>zip 文件，其中包含了一个或多个 fps 格式的 xml 文件</li>
</ul>
<p>由于防止解析 fps 文件消耗大量内存，将拒绝导入超过 64MiB 的文件。<br>
xml 文件需要为 UTF8 编码，如果不是则需要将其转换为 UTF8 编码。<br>
若您的文件超过大小限制，可考虑现在本地拆分测试数据，在题目创建后再手动上传。</p>
]]></content:encoded>
    </item>
    <item>
      <title>hydrojudge</title>
      <link>https://hydro.js.org/plugins/hydrojudge/</link>
      <guid>https://hydro.js.org/plugins/hydrojudge/</guid>
      <source url="https://hydro.js.org/rss.xml">hydrojudge</source>
      <pubDate>Sun, 21 Feb 2021 07:51:42 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="hydrojudge"> hydrojudge</h1>
<h2 id="准备"> 准备</h2>
<p>在配置评测机之前，请确认您的站点已经可以访问并正常登录/注册。</p>
<p>您应该预先下载您所要支持的语言的编译器，若您在配置完评测机后 升级/重新安装 了编译器，您需要重新启动沙箱。</p>
<p>前往 <a href="https://github.com/criyle/go-judge/releases" target="_blank" rel="noopener noreferrer">criyle/go-judge</a> 下载 executorserver。</p>
<table>
<thead>
<tr>
<th>系统版本</th>
<th>文件名</th>
</tr>
</thead>
<tbody>
<tr>
<td>Windows 7+</td>
<td>executorserver.exe</td>
</tr>
<tr>
<td>Linux 4.4+</td>
<td>executorserver-amd64</td>
</tr>
<tr>
<td>MacOS ?+</td>
<td>executorserver-macos</td>
</tr>
</tbody>
</table>
<p>Executorserver 需要在后台<strong>以 root 权限</strong>运行并监听 <code>127.0.0.1:5050</code> 。
可使用 pm2 进行管理。</p>
<div><p>Tips</p>
<p>如果您是 vj4 用户，请使用“作为独立进程”配置（设置处需设成 <code>type: vj4</code>）。</p>
</div>
<h2 id="安装"> 安装</h2>
<h3 id="作为附加组件"> 作为附加组件</h3>
<div><p>Tips</p>
<p>由于用附加组件安装的评测机与 Hydro 必须在同一台服务器上，每一个 Hydro 实例最多只能有一台评测机由附加组件安装。</p>
</div>
<p>在安装 Hydro 的机器上运行下面的指令安装 <code>@hydrooj/hydrojudge</code>：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">yarn global add @hydrooj/hydrojudge</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj addon add @hydrooj/hydrojudge</span></div></code></div></pre>
<div></div></div><p>重启 Hydro 后 hydrojudge 即可正常运行。</p>
<h3 id="作为独立进程"> 作为独立进程</h3>
<div><p>Tips</p>
<p>该方法可以帮助您在任意服务器上部署评测机。</p>
</div>
<p>首先需要创建一个有 PRIV_JUDGE 权限的账户，具体方法参照 <a href="/docs/cli/#创建评测账号">此处</a>。（在部署 Hydro 的服务器上运行）<br>
（vj4 用户需参照 <a href="https://github.com/vijos/vj4#judging" target="_blank" rel="noopener noreferrer">vj4 的方法</a> 创建账户）</p>
<p>然后在运行评测机的服务器上安装 hydrojudge 插件：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">yarn global add @hydrooj/hydrojudge</span></div></code></div></pre>
<div></div></div><p>创建目录 <code>~/.config/hydro</code>，在该目录下创建文件 <code>judge.yaml</code>，配置文件格式如下：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>yaml</div><div class='code-container'><code><div class='line'><span style="color: #8FBCBB">hosts</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">localhost</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">type</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">hydro</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># vj4 用户请在此处填写 vj4</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">server_url</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">http://localhost:8888/</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># Hydro 运行的网址</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">uname</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">judge</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 评测账号用户名</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">password</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">abc123</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 评测账号密码</span></div><div class='line'><span style="color: #D8DEE9FF">    </span><span style="color: #8FBCBB">detail</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #81A1C1">true</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 默认为 true</span></div></code></div></pre>
<div></div></div><p>设置完之后，使用下面的指令即可开始运行（可以使用 pm2 管理）：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">hydrojudge</span></div></code></div></pre>
<div></div></div><h2 id="更新"> 更新</h2>
<p>HydroJudge 会发布不定期更新。您可以使用 <code>yarn global upgrade-interactive --latest</code> 来检测并进行更新。</p>
<h2 id="关闭"> 关闭</h2>
<h3 id="作为附加组件-2"> 作为附加组件</h3>
<p>在 系统设置&gt;hydrojudge 中有一栏 Disable builtin judge，将它勾上，然后重启 Hydro 即可。</p>
<h3 id="作为独立进程-2"> 作为独立进程</h3>
<p>根据开启的方法关闭即可。</p>
<h2 id="卸载"> 卸载</h2>
<p>关闭后运行下面指令即可。</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">yarn global remove @hydrooj/hydrojudge</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj addon remove @hydrooj/hydrojudge</span></div></code></div></pre>
<div></div></div><h2 id="评测设置"> 评测设置</h2>
<h3 id="作为附加组件-3"> 作为附加组件</h3>
<p>在 系统设置&gt;hydrojudge 修改对应的参数，然后重启 Hydro 和 hydrojudge 即可。</p>
<h3 id="作为独立进程-3"> 作为独立进程</h3>
<p>如果有需要修改单题测试点数量上限等设置，可以在 <code>~/.config/hydro/judge.yaml</code> 的末尾添加下列内容：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>yaml</div><div class='code-container'><code><div class='line'><span style="color: #8FBCBB">testcases_max</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">100</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 单题最多测试点数量</span></div><div class='line'><span style="color: #8FBCBB">total_time_limit</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">120</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 单题最大总测试时长</span></div><div class='line'><span style="color: #8FBCBB">parallelism</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #B48EAD">2</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># 单评测机评测进程数量</span></div><div class='line'><span style="color: #616E88"># 更多可选配置均可添加在此处，格式与前面的三排类似</span></div></code></div></pre>
<div></div></div><p>在 <a href="https://github.com/hydro-dev/Hydro/blob/9c0afa38e3e6fa886ab9e9237847893fa6714392/packages/hydrojudge/src/config.ts#L12" target="_blank" rel="noopener noreferrer">此处</a> 的设置均可添加到此处。</p>
<h2 id="修改编译选项-添加新语言支持"> 修改编译选项/添加新语言支持</h2>
<p>对于已安装内置评测机的用户（无论内置评测机是否启动），在 控制面板&gt;系统设置 中修改 judge.langs 配置项即可；对于没有安装内置评测机的用户，需要在 <code>~/.config/hydro/langs.yaml</code> 中配置。</p>
<p>按照 <a href="https://github.com/hydro-dev/Hydro/blob/71bb2f0b517be8f6966f97f835f2521f179b3d84/packages/hydrooj/setting.yaml#L12" target="_blank" rel="noopener noreferrer">此处</a> 格式即可。</p>
<p>如果您添加了新的语言，您还需要前往 控制面板&gt;系统设置 中修改 Language Highlight ID 与 Monaco language modes。<br>
分别表示选择对应的语言后的高亮设置（基于 PrismJS）和 Monaco 编辑器语法规则设置。</p>
<p>修改完后重启 Hydro 和 hydrojudge 即可。</p>
<h2 id="测试数据格式"> 测试数据格式</h2>
<p>参照 <a href="/docs/user/problem/#测试数据格式">测试数据格式</a> 配置。</p>
<h2 id="调整沙箱空间大小"> 调整沙箱空间大小</h2>
<div><p>Note</p>
<p>如果不调整沙箱的空间大小，当您的评测使用文件 IO 且输入输出文件较大时可能会引发错误。</p>
</div>
<div><p>Tips</p>
<p>可以在服务器上运行下面的代码找到 hydro-sandbox 的运行目录：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">pm2 info hydro-sandbox </span><span style="color: #81A1C1">|</span><span style="color: #D8DEE9FF"> grep </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">exec cwd</span><span style="color: #ECEFF4">"</span></div></code></div></pre>
<div></div></div></div>
<p>将 <a href="https://github.com/criyle/go-judge/blob/master/mount.yaml" target="_blank" rel="noopener noreferrer">mount.yaml</a> 下载并放置在 sandbox 的运行目录下。然后修改第 64 行和第 68 行的 <code>size</code> 和 <code>nr_inodes</code> 的大小至您想要的大小，保存后重启 sandbox 即可完成更改。</p>
<h2 id="c-c-彩色编译错误信息"> C/C++ 彩色编译错误信息</h2>
<ol>
<li>确认您安装了支持彩色输出的编译器；</li>
<li>在系统设置中，将 C/C++ 编译命令后加上 <code>-fdiagnostics-color=always</code></li>
</ol>
<p>例：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div class='code-container'><code>c:
  compile: /usr/bin/gcc -O2 -Wall -std=c99 -o ${name} foo.c -lm -fdiagnostics-color=always</code></div></pre>
<div><span>1</span><br></div></div><h2 id="开大程序运行栈空间"> 开大程序运行栈空间</h2>
<p>在很多时候系统默认为程序提供的栈空间并不能满足我们的需求，此时我们需要手动为用户程序提供更大的栈空间。</p>
<p>修改 pm2 中 hydro-sandbox 的启动参数为 <code>ulimit -s unlimited &amp;&amp; /path-to/sandbox</code> 即可：</p>
<div><p>Tips</p>
<p>您需要将 <code>/path-to/sandbox</code> 更换为您机器上 sandbox 的绝对路径。</p>
</div>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>sh</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">pm2 del hydro-sandbox</span></div><div class='line'><span style="color: #D8DEE9FF">pm2 start </span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">ulimit -s unlimited && /path-to/sandbox</span><span style="color: #ECEFF4">"</span><span style="color: #D8DEE9FF"> --name hydro-sandbox</span></div></code></div></pre>
<div></div></div><h2 id="提高测评精度"> 提高测评精度</h2>
<p>禁用 CPU 频率缩放与 Intel 睿频加速技术，防止 CPU 频率波动。</p>
<p>禁用内存地址空间随机化，以使得存在内存寻址错误的代码能够得到更多可重复的结果，可以通过在 <code>/etc/sysctl.conf</code> 中添加下面这行并运行 <code>sudo sysctl -p</code> 实现：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div class='code-container'><code>kernel.randomize_va_space = 0</code></div></pre>
<div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>migrate-vijos</title>
      <link>https://hydro.js.org/plugins/migrate-vijos/</link>
      <guid>https://hydro.js.org/plugins/migrate-vijos/</guid>
      <source url="https://hydro.js.org/rss.xml">migrate-vijos</source>
      <pubDate>Fri, 19 Mar 2021 04:39:08 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="migrate-vijos"> migrate-vijos</h1>
<h2 id="从-vijos-升级"> 从 Vijos 升级</h2>
<div><p>Note</p>
<p>迁移会删除当前 Hydro 的所有数据（含用户账户信息）并移入 vj4 的数据。<br>
请注意备份相关文件。</p>
</div>
<p>请先完成 Hydro 的部署并完成对文件服务的配置(setting_file)。<br>
在迁移数据之前，请先停止正在运行的 vj4 服务，仅保留其数据库开启。<br>
请注意 Hydro 所在的数据库不应和源 vj4 数据库相同。<br>
若您使用 vj4-docker ，可更改 <code>docker-compose.yml</code> 将数据库映射至其他本机端口。</p>
<p>安装插件后，您应当能够在 控制面板&gt;脚本管理 中找到名为 <code>migrateVijos</code> 的脚本。<br>
其参数格式如下：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>json</div><div class='code-container'><code><div class='line'><span style="color: #ECEFF4">{</span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">host</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">localhost</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">port</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #B48EAD">27017</span><span style="color: #ECEFF4">,</span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">name</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #ECEFF4">"</span><span style="color: #A3BE8C">vj4</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">,</span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">username</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #ECEFF4">""</span><span style="color: #ECEFF4">,</span><span style="color: #ECEFF4">"</span><span style="color: #8FBCBB">password</span><span style="color: #ECEFF4">"</span><span style="color: #ECEFF4">:</span><span style="color: #ECEFF4">""</span><span style="color: #ECEFF4">}</span></div></code></div></pre>
<div></div></div><ul>
<li>host: 数据库地址</li>
<li>port: 数据库端口</li>
<li>name: 数据库名</li>
<li>username&amp;password: 账号密码，若无则填写空字符串</li>
</ul>
<div><p>Tips</p>
<p>vj4-docker 中数据库名为 vj4，无账号密码。</p>
</div>
<p>当脚本运行完成后，请重启 Hydro 实例，会自动完成之后的升级操作。
迁移后，请使用原 vj4 的管理员账号登录实例。</p>
<div><p>Note</p>
<p>若您的 vj4 是由 vj2 或 tyvj 升级而来，在迁移完成后请不要卸载该插件，否则可能导致部分用户无法登录。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>recaptcha</title>
      <link>https://hydro.js.org/plugins/recaptcha/</link>
      <guid>https://hydro.js.org/plugins/recaptcha/</guid>
      <source url="https://hydro.js.org/rss.xml">recaptcha</source>
      <pubDate>Tue, 20 Apr 2021 05:10:12 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="recaptcha"> recaptcha</h1>
<div><p>Tips</p>
<p>我们采用 reCAPTCHA v3 来检验注册者是否是人类，在注册过程中没有看见传统验证码属正常现象。</p>
</div>
<p>前往 <a href="https://www.google.com/recaptcha/admin/create" target="_blank" rel="noopener noreferrer">https://www.google.com/recaptcha/admin/create</a> 创建 reCAPTCHA 密钥。<br>
reCAPTCHA 类型请选择“reCAPTCHA 第 3 版”。</p>
<p>创建成功后将客户端密钥和服务端密钥分别填入系统设置 recaptcha 栏下的 <code>key</code> 和 <code>secret</code> 中，重启 Hydro 后 reCAPTCHA 即可正常工作。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Sonic</title>
      <link>https://hydro.js.org/plugins/sonic/</link>
      <guid>https://hydro.js.org/plugins/sonic/</guid>
      <source url="https://hydro.js.org/rss.xml">Sonic</source>
      <pubDate>Mon, 17 May 2021 14:57:03 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="sonic"> Sonic</h1>
<h2 id="安装"> 安装</h2>
<h3 id="安装-sonic-server"> 安装 <a href="https://github.com/valeriansaliou/sonic" target="_blank" rel="noopener noreferrer">sonic-server</a></h3>
<p>使用 root 用户执行如下命令：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>bash</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">apt install rustc </span><span style="color: #616E88">#安装 rust</span></div><div class='line'><span style="color: #D8DEE9FF">apt install build-essential clang libclang-dev libc6-dev g++ llvm-dev</span></div></code></div></pre>
<div></div></div><p>请查看 <a href="https://mirrors.ustc.edu.cn/help/crates.io-index.html" target="_blank" rel="noopener noreferrer">此文档</a> 更换到 USTC Crates 源后，执行如下命令：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>bash</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">cargo install sonic-server</span></div></code></div></pre>
<div></div></div><h3 id="安装-sonic-插件"> 安装 sonic 插件</h3>
<p>使用 root 用户执行如下命令：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>bash</div><div class='code-container'><code><div class='line'><span style="color: #D8DEE9FF">yarn global add @hydrooj/sonic</span></div><div class='line'><span style="color: #D8DEE9FF">hydrooj addon add @hydrooj/sonic</span></div></code></div></pre>
<div></div></div><h2 id="启动"> 启动</h2>
<p>在 <code>/root/.sonic/config.cfg</code>（没有的自行建立，也可以换成其他的你喜欢的路径）按照以下配置示例写入配置。</p>
<p>配置示例：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div class='code-container'><code><div class='line'><span style="color: undefined"># Sonic
# Fast, lightweight and schema-less search backend
# Configuration file
# Example: https://github.com/valeriansaliou/sonic/blob/master/config.cfg


[server]

log_level = "error"


[channel]

inet = "127.0.0.1:1491" # 默认监听本机
tcp_timeout = 300

auth_password = "SecretPassword"

[channel.search]

query_limit_default = 10
query_limit_maximum = 100
query_alternates_try = 4

suggest_limit_default = 5
suggest_limit_maximum = 20


[store]

[store.kv]

path = "/data/sonic/store/kv/"

retain_word_objects = 1000

[store.kv.pool]

inactive_after = 1800

[store.kv.database]

flush_after = 900

compress = true
parallelism = 2
max_files = 100
max_compactions = 1
max_flushes = 1
write_buffer = 16384
write_ahead_log = true

[store.fst]

path = "/data/sonic/store/fst/"

[store.fst.pool]

inactive_after = 300

[store.fst.graph]

consolidate_after = 180

max_size = 2048
max_words = 250000</span></div></code></div></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br></div></div><p>执行如下命令：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div class='code-container'><code><div class='line'><span style="color: undefined">pm2 start /root/.cargo/bin/sonic -- -c /root/.sonic/config.cfg
pm2 save</span></div></code></div></pre>
<div><span>1</span><br></div></div><h2 id="配置"> 配置</h2>
<h3 id="后端地址配置"> 后端地址配置</h3>
<p>进入 HydroOJ 控制面板，配置 sonic 后端地址。</p>
<p>如果您直接复制配置示例，那么按照以下内容配置：</p>
<ul>
<li>host: <code>127.0.0.1</code></li>
<li>port: <code>1491</code></li>
<li>auth: <code>SecretPassword</code></li>
</ul>
<p>修改完成后，重启 HydroOJ。</p>
<h3 id="重启-hydrooj"> 重启 HydroOJ</h3>
<p>执行命令 <code>pm2 restart hydrooj</code>。</p>
<h3 id="重建题目索引"> 重建题目索引</h3>
<p>进入 HydroOJ 控制面板，在脚本管理中找到重建题目索引，点击运行，参数留空即可。</p>
<p>至此，搜索功能应当可以正常使用。</p>
<h2 id="faq"> FAQ</h2>
<h3 id="sonic-server-安装时卡在-librocksdb"> sonic-server 安装时卡在 librocksdb</h3>
<p>考虑换台性能强点的服务器。</p>
<h3 id="安装后题目搜索不正常"> 安装后题目搜索不正常</h3>
<p>请更新到 HydroOJ 最新版本后，再运行重建题目索引。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Vjudge</title>
      <link>https://hydro.js.org/plugins/vjudge/</link>
      <guid>https://hydro.js.org/plugins/vjudge/</guid>
      <source url="https://hydro.js.org/rss.xml">Vjudge</source>
      <pubDate>Tue, 22 Jun 2021 03:41:36 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="vjudge"> Vjudge</h1>
<h2 id="codeforces"> Codeforces</h2>
<p>由于 vjudge 更新了反爬虫机制，Codeforces RemoteJudge 需要一些特殊手段才能正常工作。<br>
详情请 <a href="https://github.com/hydro-dev/Hydro/blob/master/packages/vjudge/src/providers/codeforces.ts" target="_blank" rel="noopener noreferrer">阅读源码</a></p>
<p>安装插件后创建名为 codeforces 的域，进入数据库 <code>db.domain.updateOne({_id:'codeforces'},{$set:{mount:'codeforces'}});</code></p>
<p>在 codeforces 的域设置中，将 <code>allowedLangs</code> 如下配置：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div class='code-container'><code><div class='line'><span style="color: undefined">codeforces,codeforces.43,codeforces.52,codeforces.50,codeforces.54,codeforces.59,codeforces.61,codeforces.65,codeforces.9,codeforces.28,codeforces.32,codeforces.12,codeforces.60,codeforces.36,codeforces.48,codeforces.19,codeforces.3,codeforces.4,codeforces.51,codeforces.13,codeforces.6,codeforces.7,codeforces.31,codeforces.40,codeforces.41,codeforces.67,codeforces.49,codeforces.20,codeforces.34,codeforces.55</span></div></code></div></pre>
<div></div></div><p>在 vjudge 表中插入如下条目：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>js</div><div class='code-container'><code><div class='line'><span style="color: #ECEFF4">{</span><span style="color: #D8DEE9FF">type</span><span style="color: #ECEFF4">:</span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">codeforces</span><span style="color: #ECEFF4">'</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> handle</span><span style="color: #ECEFF4">:</span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">&lt;codeforces login handle&gt;</span><span style="color: #ECEFF4">'</span><span style="color: #ECEFF4">,</span><span style="color: #D8DEE9FF"> password</span><span style="color: #ECEFF4">:</span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">&lt;codeforces login password&gt;</span><span style="color: #ECEFF4">'</span><span style="color: #ECEFF4">}</span></div></code></div></pre>
<div></div></div><p>将如下配置添加至 langs 设置末尾：</p>
<div><pre style="background-color: #2e3440ff; color: #d8dee9ff"><div>yaml</div><div class='code-container'><code><div class='line'><span style="color: #8FBCBB">codeforces</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">execute</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">none</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Codeforces</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">domain</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #ECEFF4">-</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">codeforces</span><span style="color: #D8DEE9FF"> </span><span style="color: #616E88"># Allow domain 'codeforces' to use these languages</span></div><div class='line'><span style="color: #8FBCBB">codeforces.43</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp astyle-c</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">monaco</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">GNU GCC C11 5.1.0</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.52</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp astyle-c</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">monaco</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Clang++17 Diagnostics</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.50</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp astyle-c</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">monaco</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">GNU G++14 6.4.0</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.54</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp astyle-c</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">monaco</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">GNU G++17 7.3.0</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.59</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp astyle-c</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">monaco</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Microsoft Visual C++ 2017</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.61</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp astyle-c</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">monaco</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">GNU G++17 9.2.0 (64 bit, msys 2)</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.65</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp astyle-cs</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">monaco</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">csharp</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">C# 8, .NET Core 3.1</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.9</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">cpp astyle-cs</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">monaco</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">csharp</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">C# Mono 6.8</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.28</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">d</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">monaco</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">plain</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">D DMD32 v2.091.0</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.32</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">go</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Go 1.15.6</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.12</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">haskell</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Haskell GHC 8.10.1</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">--</span></div><div class='line'><span style="color: #8FBCBB">codeforces.60</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">java astyle-java</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">monaco</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">java</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Java 11.0.6</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.36</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">java astyle-java</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">monaco</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">java</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Java 1.8.0_241</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.48</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">kotlin</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Kotlin 1.4.0</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.19</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">ocaml</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">monaco</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">plain</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">OCaml 4.02.1</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">[</span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">(*</span><span style="color: #ECEFF4">'</span><span style="color: #ECEFF4">,</span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">*)</span><span style="color: #ECEFF4">'</span><span style="color: #ECEFF4">]</span></div><div class='line'><span style="color: #8FBCBB">codeforces.3</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">pascal</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Delphi 7</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.4</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">pascal</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Free Pascal 3.0.2</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.51</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">pascal</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">PascalABC.NET 3.4.2</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.13</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">perl</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Perl 5.20.1</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">#</span><span style="color: #ECEFF4">'</span></div><div class='line'><span style="color: #8FBCBB">codeforces.6</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">php</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">PHP 7.2.13</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.7</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">python</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Python 2.7.18</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">#</span><span style="color: #ECEFF4">'</span></div><div class='line'><span style="color: #8FBCBB">codeforces.31</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">python</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Python 3.9.1</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">#</span><span style="color: #ECEFF4">'</span></div><div class='line'><span style="color: #8FBCBB">codeforces.40</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">python</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">PyPy 2.7 (7.3.0)</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">#</span><span style="color: #ECEFF4">'</span></div><div class='line'><span style="color: #8FBCBB">codeforces.41</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">python</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">PyPy 3.7 (7.3.0)</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">#</span><span style="color: #ECEFF4">'</span></div><div class='line'><span style="color: #8FBCBB">codeforces.67</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">ruby</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Ruby 3.0.0</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #ECEFF4">'</span><span style="color: #A3BE8C">#</span><span style="color: #ECEFF4">'</span></div><div class='line'><span style="color: #8FBCBB">codeforces.49</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">rust</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Rust 1.49.0</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.20</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">scala</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Scala 2.12.8</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.34</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">javascript</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">JavaScript V8 4.8.0</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div><div class='line'><span style="color: #8FBCBB">codeforces.55</span><span style="color: #ECEFF4">:</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">highlight</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">javascript</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">display</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">Node.js 12.6.3</span></div><div class='line'><span style="color: #D8DEE9FF">  </span><span style="color: #8FBCBB">comment</span><span style="color: #ECEFF4">:</span><span style="color: #D8DEE9FF"> </span><span style="color: #A3BE8C">//</span></div></code></div></pre>
<div></div></div><p>之后再重启 Hydro 即可。</p>
]]></content:encoded>
    </item>
  </channel>
</rss>